<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8"/>
    <title></title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>

    <link rel="stylesheet" href="../../_static/fonts/font-awesome/css/font-awesome.min.css"/>
    
    <link rel="icon" type="image/png" href="../../_static/images/icons/favicon-16.png">

    <!-- jQuery Core -->
    <script src="../../_static/js/lib/jquery-1.12.0.min.js"></script>

    <!--Sphinx files-->
    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    './',
            VERSION:     '0.3.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  false
        };
    </script>
    <script src="../../_static/underscore.js"></script>
    <script src="../../_static/doctools.js"></script>

    

    <!-- Bootstrap Core -->
    <link rel="stylesheet" href="../../_static/bootstrap/css/bootstrap.min.css"/>
    <script src="../../_static/bootstrap/js/bootstrap.min.js"></script>

    <!-- EPAM UUI JavaScript Core -->
    <script src="../../_static/js/uui-core.min.js" type="text/javascript"></script>
    <script src="../../_static/js/uui-global-search.min.js" type="text/javascript"></script>

    <!-- EPAM UUI Styles Core -->
    <link rel="stylesheet" href="../../_static/css/uui-styles.css"/>

    <!-- Scroll for UUI Sidebar -->
    <link rel="stylesheet" href="../../_static/css/lib/jquery.mCustomScrollbar.min.css"/>
    <script src="../../_static/js/lib/jquery.mCustomScrollbar.concat.min.js"></script>

    <!-- Handlebars -->
    <script src="../../_static/js/handlebars.js"></script>

    <!-- Custom sidenav -->
    <script src="../../_static/js/custom-sidenav.js"></script>

    <!-- Pygments -->
    <link rel="stylesheet" href="../../_static/css/pygments.css"/>

    

    <script type="text/javascript">
        $(window).load(function () {
            document.title = "Indigo API Reference"
            UUI.Navigation.init();
            UUI.Global_Search.init();

            $('.news').height($('#main-tiles').height())
        });
    </script>
</head>

<body>
    
    <div class="wrapper">

        <header>
    <div class="uui-header">
        <nav>
            <!--Responsive html-layout-->
            <div class="uui-responsive-header">
                <div class="responsive-header">
                    <div class="responsive-toggle-box">
                        <span></span>
                        <span></span>
                        <span></span>
                    </div>
                    <div class="responsive-hide-menu">
                        <span></span>
                        <span></span>
                    </div>
                    <a href="../../index.html" class="responsive-brand-logo">
                        <span class="arrow fa fa-angle-left"></span>
                        <span class="logo">
                        <img src="../../_static/images/Logo_Epam_Color.svg" alt=""/>
                    </span>
                        <span class="title">Life Sciences</span>
                    </a>
                    <ul class="responsive-header-tools nav navbar-nav">
                        <li class="responsive-header-icon search-icon">
                            <a href="#" onclick="return false">
                                <i class="fa fa-search"></i>
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="responsive-menu">
                    <div class="menu-wrapper">
                        <div class="menu-scroll">
                            <ul class="nav navbar-nav">
                                <li class="sub-menu active">
                                    <a href="../../index.html">
                                        <span>Products</span>
                                        <div class="arrow fa fa-angle-right"></div>
                                    </a>
                                    

<ul class="sub">
<li class="sub-menu"><a class="reference internal" href="../../bingo/index.html">Bingo<div class="arrow fa fa-angle-right"></div></a><ul class="sub">
<li class="toctree-l2"><a class="reference internal" href="../../bingo/bingo-oracle.html">Bingo Oracle</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../bingo/bingo-postgres.html">Bingo PostgreSQL</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../bingo/bingo-sqlserver.html">Bingo SQL Server</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../bingo/bingo-nosql.html">Bingo NoSQL</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../download/bingo.html">Downloads</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../index.html">Indigo Toolkit<div class="arrow fa fa-angle-right"></div></a><ul class="sub">
<li class="toctree-l2"><a class="reference internal" href="index.html">API</a></li>
<li class="toctree-l2 current"><a class="current reference internal" href="#">API Reference</a></li>
<li class="toctree-l2"><a class="reference internal" href="../concepts/index.html">Concepts</a></li>
<li class="toctree-l2"><a class="reference internal" href="../utilities.html">Indigo Utilities</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../download/indigo/index.html">Downloads</a></li>
<li class="toctree-l2"><a class="reference internal" href="../build.html">Build</a></li>
<li class="toctree-l2"><a class="reference internal" href="../installation.html">SDK Installation</a></li>
<li class="toctree-l2"><a class="reference internal" href="../options/index.html">Options</a></li>
<li class="toctree-l2"><a class="reference internal" href="../release-notes/index.html">Release Notes</a></li>
<li class="toctree-l2"><a class="reference internal" href="../examples/index.html">Examples</a></li>
</ul>
</li>
<li class="sub-menu"><a class="reference internal" href="../../ketcher/index.html">Ketcher<div class="arrow fa fa-angle-right"></div></a><ul class="sub">
<li class="toctree-l2"><a class="reference internal" href="../../ketcher/editing-tips.html">Editing Tips</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../ketcher/developers-manual.html">Developers Manual</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../ketcher/help.html">Help</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../ketcher/demo.html">Ketcher 2.0 Demo</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../download/ketcher.html">Downloads</a></li>
</ul>
</li>
<li class="sub-menu"><a class="reference internal" href="../eln/index.html">Indigo ELN<div class="arrow fa fa-angle-right"></div></a><ul class="sub">
<li class="toctree-l2"><a class="reference internal" href="../eln/changelog.html">Release Notes</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../download/indigo/eln.html">Downloads</a></li>
</ul>
</li>
<li class="sub-menu"><a class="reference internal" href="../../imago/index.html">Imago OCR<div class="arrow fa fa-angle-right"></div></a><ul class="sub">
<li class="toctree-l2"><a class="reference internal" href="../../imago/examples.html">Features and Examples</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../imago/report.html">Comparison Report</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../imago/imago-gui.html">Imago OCR Visual Tool</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../imago/imago_console.html">Imago Console Application</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../imago/c.html">C Library Reference</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../imago/java.html">Java Bindings</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../imago/dependencies.html">Dependencies</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../imago/changelog.html">Changelog</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../download/imago.html">Downloads</a></li>
</ul>
</li>
<li class="sub-menu"><a class="reference internal" href="../../parso.html">Parso<div class="arrow fa fa-angle-right"></div></a><ul class="sub">
<li class="toctree-l2"><a class="reference internal" href="../../parso/changelog.html">Release Notes</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../download/parso.html">Downloads</a></li>
</ul>
</li>
<li class="sub-menu"><a class="reference internal" href="../../selenium.html">Selenium Framework</a></li>
</ul>

                                </li>
                                <li><a href="../../resources.html"><span>Resources</span></a></li>
                                <li><a href="../../download/index.html"><span>Downloads</span></a></li>
                                <li><a href="../../contact.html"><span>Contact Info</span></a></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="responsive-global-search">
                    <div class="search-header">
                        <div class="header-wrapper">
                            <div class="search-field">
                                <label></label>
                                <form action="../../search.html" method="get">
    <input type="search" name="q" class="uui-search" placeholder="Search"/>
    <input type="hidden" name="check_keywords" value="yes" />
    <input type="hidden" name="area" value="default" />
</form>
                            </div>
                            <div class="hide-search">
                                <span></span>
                                <span></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!---->
            <div class="header-container">
                <a href="../../index.html" class="brand-logo">
                    <span class="logo">
                        <img src="../../_static/images/Logo_Epam_Color.svg" alt=""/>
                    </span>
                    <span class="title">
                      Life Sciences Open Source
                    </span>
                </a>
                <ul class="uui-navigation nav navbar-nav">
                    <li class="dropdown">
                        <a href="" class="dropdown-toggle" data-toggle="dropdown">Products</a>
                        

<div class="dropdown-menu" role="menu">
    <div class="container"><h2>Cheminformatics</h2><hr><div class="dropdown-menu-row"><div class="dropdown-menu-column"><span class="nav-subtitle"><a class="reference internal" href="../../bingo/index.html">Bingo &raquo;</a></span><ul><li><a class="reference internal" href="../../bingo/bingo-oracle.html">Bingo Oracle</a></li><li><a class="reference internal" href="../../bingo/bingo-postgres.html">Bingo PostgreSQL</a></li><li><a class="reference internal" href="../../bingo/bingo-sqlserver.html">Bingo SQL Server</a></li><li><a class="reference internal" href="../../bingo/bingo-nosql.html">Bingo NoSQL</a></li><li><a class="reference internal" href="../../download/bingo.html">Downloads</a></li></ul></div><div class="dropdown-menu-column"><span class="nav-subtitle"><a class="reference internal" href="../index.html">Indigo Toolkit &raquo;</a></span><ul><li><a class="reference internal" href="index.html">API</a></li><li><a class="reference internal" href="#">API Reference</a></li><li><a class="reference internal" href="../concepts/index.html">Concepts</a></li><li><a class="reference internal" href="../utilities.html">Indigo Utilities</a></li><li><a class="reference internal" href="../../download/indigo/index.html">Downloads</a></li><li><a class="reference internal" href="../build.html">Build</a></li><li><a class="reference internal" href="../installation.html">SDK Installation</a></li><li><a class="reference internal" href="../options/index.html">Options</a></li><li><a class="reference internal" href="../release-notes/index.html">Release Notes</a></li><li><a class="reference internal" href="../examples/index.html">Examples</a></li></ul></div><div class="dropdown-menu-column"><span class="nav-subtitle"><a class="reference internal" href="../../ketcher/index.html">Ketcher &raquo;</a></span><ul><li><a class="reference internal" href="../../ketcher/editing-tips.html">Editing Tips</a></li><li><a class="reference internal" href="../../ketcher/developers-manual.html">Developers Manual</a></li><li><a class="reference internal" href="../../ketcher/help.html">Help</a></li><li><a class="reference internal" href="../../ketcher/demo.html">Ketcher 2.0 Demo</a></li><li><a class="reference internal" href="../../download/ketcher.html">Downloads</a></li></ul></div><div class="dropdown-menu-column"><span class="nav-subtitle"><a class="reference internal" href="../eln/index.html">Indigo ELN &raquo;</a></span><ul><li><a class="reference internal" href="../eln/changelog.html">Release Notes</a></li><li><a class="reference internal" href="../../download/indigo/eln.html">Downloads</a></li></ul></div><div class="dropdown-menu-column"><span class="nav-subtitle"><a class="reference internal" href="../../imago/index.html">Imago OCR &raquo;</a></span><ul><li><a class="reference internal" href="../../imago/examples.html">Features and Examples</a></li><li><a class="reference internal" href="../../imago/report.html">Comparison Report</a></li><li><a class="reference internal" href="../../imago/imago-gui.html">Imago OCR Visual Tool</a></li><li><a class="reference internal" href="../../imago/imago_console.html">Imago Console Application</a></li><li><a class="reference internal" href="../../imago/c.html">C Library Reference</a></li><li><a class="reference internal" href="../../imago/java.html">Java Bindings</a></li><li><a class="reference internal" href="../../imago/dependencies.html">Dependencies</a></li><li><a class="reference internal" href="../../imago/changelog.html">Changelog</a></li><li><a class="reference internal" href="../../download/imago.html">Downloads</a></li></ul></div></div><h2>Data processing</h2><hr><div class="dropdown-menu-row"><div class="dropdown-menu-column"><span class="nav-subtitle"><a class="reference internal" href="../../parso.html">Parso &raquo;</a></span><ul><li><a class="reference internal" href="../../parso/changelog.html">Release Notes</a></li><li><a class="reference internal" href="../../download/parso.html">Downloads</a></li></ul></div></div><h2>Software development</h2><hr><div class="dropdown-menu-row"><div class="dropdown-menu-column"><span class="nav-subtitle"><a class="reference internal" href="../../selenium.html">Selenium Framework &raquo;</a></span></div></div></div>
</div>
                    </li>
                    <li><a href="../../resources.html"><span>Resources</span></a></li>
                    <li><a href="../../download/index.html"><span>Downloads</span></a></li>
                    <li><a href="../../contact.html"><span>Contact Info</span></a></li>
                </ul>
                <ul class="uui-header-tools nav navbar-nav">
                    <li class="uui-global-search">
                        <div class="search-field">
                            <label></label>
                            <form action="../../search.html" method="get">
    <input type="search" name="q" class="uui-search" placeholder="Search"/>
    <input type="hidden" name="check_keywords" value="yes" />
    <input type="hidden" name="area" value="default" />
</form>
                        </div>
                    </li>
                </ul>
            </div>
        </nav>
    </div>
</header>

        <div class="uui-main-container">
            <main>
                
                <section class="uui-breadcrumbs-container">
                    <div class="container">
                        <div class="row">
                            <ol class="uui-breadcrumbs">
                                <li><a href="../../index.html">Home</a></li>
                                
                                <li><a href="../index.html">Indigo Toolkit</a></li>
                                
                                <li class="active"><a href="#">Indigo API Reference</a></li>
                            </ol>
                        </div>
                    </div>
                </section>
                <section class="promo-section">
                    <div class="container">
                        <div class="row">
                            
                                
                                <div class="col-xs-12 col-md-3" role="complementary">
                                    <div class="sidenav hidden-print hidden-xs hidden-sm affix-top" data-spy="affix" data-offset-top="0"
     data-offset-bottom="0">
    <section class="uui-accordion" id="accordion1">

        <!-- Filled in static/js/custom-sidenav.js -->
        <div id="local-toc" style="display: none;"><ul>
<li><a class="reference internal" href="#">Indigo API Reference</a><ul>
<li><a class="reference internal" href="#python">Python</a><ul>
<li><a class="reference internal" href="#indigo">Indigo</a></li>
<li><a class="reference internal" href="#indigoobject">IndigoObject</a></li>
<li><a class="reference internal" href="#indigorenderer">IndigoRenderer</a></li>
<li><a class="reference internal" href="#indigoinchi">IndigoInchi</a></li>
</ul>
</li>
<li><a class="reference internal" href="#plain-c">Plain C</a><ul>
<li><a class="reference internal" href="#core-indigo-api">Core Indigo API</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

    </section>
</div>
                                </div>
                                
                            
                            
                                <div class="col-xs-12 col-md-9" role="main">
                            
  <div class="section" id="indigo-api-reference">
<h1>Indigo API Reference<a class="headerlink" href="#indigo-api-reference" title="Permalink to this headline">¶</a></h1>
<div class="section" id="python">
<h2>Python<a class="headerlink" href="#python" title="Permalink to this headline">¶</a></h2>
<div class="section" id="indigo">
<h3>Indigo<a class="headerlink" href="#indigo" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="indigo.Indigo">
<em class="property">class </em><code class="descclassname">indigo.</code><code class="descname">Indigo</code><span class="sig-paren">(</span><em>path=None</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo" title="Permalink to this definition">¶</a></dt>
<dd><dl class="attribute">
<dt id="indigo.Indigo.ABS">
<code class="descname">ABS</code><em class="property"> = 1</em><a class="headerlink" href="#indigo.Indigo.ABS" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.ALLENE">
<code class="descname">ALLENE</code><em class="property"> = 11</em><a class="headerlink" href="#indigo.Indigo.ALLENE" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.AND">
<code class="descname">AND</code><em class="property"> = 3</em><a class="headerlink" href="#indigo.Indigo.AND" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.CHAIN">
<code class="descname">CHAIN</code><em class="property"> = 9</em><a class="headerlink" href="#indigo.Indigo.CHAIN" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.CIS">
<code class="descname">CIS</code><em class="property"> = 7</em><a class="headerlink" href="#indigo.Indigo.CIS" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.DOUBLET">
<code class="descname">DOUBLET</code><em class="property"> = 102</em><a class="headerlink" href="#indigo.Indigo.DOUBLET" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.DOWN">
<code class="descname">DOWN</code><em class="property"> = 6</em><a class="headerlink" href="#indigo.Indigo.DOWN" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.EITHER">
<code class="descname">EITHER</code><em class="property"> = 4</em><a class="headerlink" href="#indigo.Indigo.EITHER" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.OR">
<code class="descname">OR</code><em class="property"> = 2</em><a class="headerlink" href="#indigo.Indigo.OR" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.RC_CENTER">
<code class="descname">RC_CENTER</code><em class="property"> = 1</em><a class="headerlink" href="#indigo.Indigo.RC_CENTER" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.RC_MADE_OR_BROKEN">
<code class="descname">RC_MADE_OR_BROKEN</code><em class="property"> = 4</em><a class="headerlink" href="#indigo.Indigo.RC_MADE_OR_BROKEN" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.RC_NOT_CENTER">
<code class="descname">RC_NOT_CENTER</code><em class="property"> = -1</em><a class="headerlink" href="#indigo.Indigo.RC_NOT_CENTER" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.RC_ORDER_CHANGED">
<code class="descname">RC_ORDER_CHANGED</code><em class="property"> = 8</em><a class="headerlink" href="#indigo.Indigo.RC_ORDER_CHANGED" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.RC_UNCHANGED">
<code class="descname">RC_UNCHANGED</code><em class="property"> = 2</em><a class="headerlink" href="#indigo.Indigo.RC_UNCHANGED" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.RC_UNMARKED">
<code class="descname">RC_UNMARKED</code><em class="property"> = 0</em><a class="headerlink" href="#indigo.Indigo.RC_UNMARKED" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.RING">
<code class="descname">RING</code><em class="property"> = 10</em><a class="headerlink" href="#indigo.Indigo.RING" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_ANY">
<code class="descname">SG_TYPE_ANY</code><em class="property"> = 14</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_ANY" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_COM">
<code class="descname">SG_TYPE_COM</code><em class="property"> = 11</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_COM" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_COP">
<code class="descname">SG_TYPE_COP</code><em class="property"> = 7</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_COP" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_CRO">
<code class="descname">SG_TYPE_CRO</code><em class="property"> = 8</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_CRO" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_DAT">
<code class="descname">SG_TYPE_DAT</code><em class="property"> = 1</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_DAT" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_FOR">
<code class="descname">SG_TYPE_FOR</code><em class="property"> = 13</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_FOR" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_GEN">
<code class="descname">SG_TYPE_GEN</code><em class="property"> = 0</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_GEN" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_GRA">
<code class="descname">SG_TYPE_GRA</code><em class="property"> = 10</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_GRA" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_MER">
<code class="descname">SG_TYPE_MER</code><em class="property"> = 6</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_MER" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_MIX">
<code class="descname">SG_TYPE_MIX</code><em class="property"> = 12</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_MIX" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_MOD">
<code class="descname">SG_TYPE_MOD</code><em class="property"> = 9</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_MOD" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_MON">
<code class="descname">SG_TYPE_MON</code><em class="property"> = 5</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_MON" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_MUL">
<code class="descname">SG_TYPE_MUL</code><em class="property"> = 4</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_MUL" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_SRU">
<code class="descname">SG_TYPE_SRU</code><em class="property"> = 3</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_SRU" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SG_TYPE_SUP">
<code class="descname">SG_TYPE_SUP</code><em class="property"> = 2</em><a class="headerlink" href="#indigo.Indigo.SG_TYPE_SUP" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.SINGLET">
<code class="descname">SINGLET</code><em class="property"> = 101</em><a class="headerlink" href="#indigo.Indigo.SINGLET" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.TRANS">
<code class="descname">TRANS</code><em class="property"> = 8</em><a class="headerlink" href="#indigo.Indigo.TRANS" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.TRIPLET">
<code class="descname">TRIPLET</code><em class="property"> = 103</em><a class="headerlink" href="#indigo.Indigo.TRIPLET" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.UP">
<code class="descname">UP</code><em class="property"> = 5</em><a class="headerlink" href="#indigo.Indigo.UP" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.buildPkaModel">
<code class="descname">buildPkaModel</code><span class="sig-paren">(</span><em>level</em>, <em>threshold</em>, <em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.buildPkaModel" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.clearTautomerRules">
<code class="descname">clearTautomerRules</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.clearTautomerRules" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.commonBits">
<code class="descname">commonBits</code><span class="sig-paren">(</span><em>fingerprint1</em>, <em>fingerprint2</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.commonBits" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.convertToArray">
<code class="descname">convertToArray</code><span class="sig-paren">(</span><em>iteratable</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.convertToArray" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.countReferences">
<code class="descname">countReferences</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.countReferences" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.createArray">
<code class="descname">createArray</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.createArray" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.createDecomposer">
<code class="descname">createDecomposer</code><span class="sig-paren">(</span><em>scaffold</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.createDecomposer" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.createFileSaver">
<code class="descname">createFileSaver</code><span class="sig-paren">(</span><em>filename</em>, <em>format</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.createFileSaver" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.createMolecule">
<code class="descname">createMolecule</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.createMolecule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.createQueryMolecule">
<code class="descname">createQueryMolecule</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.createQueryMolecule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.createQueryReaction">
<code class="descname">createQueryReaction</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.createQueryReaction" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.createReaction">
<code class="descname">createReaction</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.createReaction" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.createSaver">
<code class="descname">createSaver</code><span class="sig-paren">(</span><em>obj</em>, <em>format</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.createSaver" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.dbgBreakpoint">
<code class="descname">dbgBreakpoint</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.dbgBreakpoint" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.decomposeMolecules">
<code class="descname">decomposeMolecules</code><span class="sig-paren">(</span><em>scaffold</em>, <em>structures</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.decomposeMolecules" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="indigo.Indigo.dllpath">
<code class="descname">dllpath</code><em class="property"> = '/opt/indigo-python/lib/Linux/x64'</em><a class="headerlink" href="#indigo.Indigo.dllpath" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.exactMatch">
<code class="descname">exactMatch</code><span class="sig-paren">(</span><em>item1</em>, <em>item2</em>, <em>flags=''</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.exactMatch" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.extractCommonScaffold">
<code class="descname">extractCommonScaffold</code><span class="sig-paren">(</span><em>structures</em>, <em>options=''</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.extractCommonScaffold" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.getFragmentedMolecule">
<code class="descname">getFragmentedMolecule</code><span class="sig-paren">(</span><em>elem</em>, <em>options=''</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.getFragmentedMolecule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.iterateCDX">
<code class="descname">iterateCDX</code><span class="sig-paren">(</span><em>reader</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.iterateCDX" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.iterateCDXFile">
<code class="descname">iterateCDXFile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.iterateCDXFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.iterateCML">
<code class="descname">iterateCML</code><span class="sig-paren">(</span><em>reader</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.iterateCML" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.iterateCMLFile">
<code class="descname">iterateCMLFile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.iterateCMLFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.iterateRDF">
<code class="descname">iterateRDF</code><span class="sig-paren">(</span><em>reader</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.iterateRDF" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.iterateRDFile">
<code class="descname">iterateRDFile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.iterateRDFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.iterateSDF">
<code class="descname">iterateSDF</code><span class="sig-paren">(</span><em>reader</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.iterateSDF" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.iterateSDFile">
<code class="descname">iterateSDFile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.iterateSDFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.iterateSmiles">
<code class="descname">iterateSmiles</code><span class="sig-paren">(</span><em>reader</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.iterateSmiles" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.iterateSmilesFile">
<code class="descname">iterateSmilesFile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.iterateSmilesFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.iterateTautomers">
<code class="descname">iterateTautomers</code><span class="sig-paren">(</span><em>molecule</em>, <em>params</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.iterateTautomers" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadBuffer">
<code class="descname">loadBuffer</code><span class="sig-paren">(</span><em>buf</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadBuffer" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadMolecule">
<code class="descname">loadMolecule</code><span class="sig-paren">(</span><em>string</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadMolecule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadMoleculeFromFile">
<code class="descname">loadMoleculeFromFile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadMoleculeFromFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadQueryMolecule">
<code class="descname">loadQueryMolecule</code><span class="sig-paren">(</span><em>string</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadQueryMolecule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadQueryMoleculeFromFile">
<code class="descname">loadQueryMoleculeFromFile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadQueryMoleculeFromFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadQueryReaction">
<code class="descname">loadQueryReaction</code><span class="sig-paren">(</span><em>string</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadQueryReaction" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadQueryReactionFromFile">
<code class="descname">loadQueryReactionFromFile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadQueryReactionFromFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadReaction">
<code class="descname">loadReaction</code><span class="sig-paren">(</span><em>string</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadReaction" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadReactionFromFile">
<code class="descname">loadReactionFromFile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadReactionFromFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadReactionSmarts">
<code class="descname">loadReactionSmarts</code><span class="sig-paren">(</span><em>string</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadReactionSmarts" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadReactionSmartsFromFile">
<code class="descname">loadReactionSmartsFromFile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadReactionSmartsFromFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadSmarts">
<code class="descname">loadSmarts</code><span class="sig-paren">(</span><em>string</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadSmarts" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadSmartsFromFile">
<code class="descname">loadSmartsFromFile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadSmartsFromFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.loadString">
<code class="descname">loadString</code><span class="sig-paren">(</span><em>string</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.loadString" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.nameToStructure">
<code class="descname">nameToStructure</code><span class="sig-paren">(</span><em>name</em>, <em>params=None</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.nameToStructure" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.reactionProductEnumerate">
<code class="descname">reactionProductEnumerate</code><span class="sig-paren">(</span><em>replacedaction</em>, <em>monomers</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.reactionProductEnumerate" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.removeTautomerRule">
<code class="descname">removeTautomerRule</code><span class="sig-paren">(</span><em>id</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.removeTautomerRule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.resetOptions">
<code class="descname">resetOptions</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.resetOptions" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.rgroupComposition">
<code class="descname">rgroupComposition</code><span class="sig-paren">(</span><em>molecule</em>, <em>options=''</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.rgroupComposition" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.setOption">
<code class="descname">setOption</code><span class="sig-paren">(</span><em>option</em>, <em>value1</em>, <em>value2=None</em>, <em>value3=None</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.setOption" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.setTautomerRule">
<code class="descname">setTautomerRule</code><span class="sig-paren">(</span><em>id</em>, <em>beg</em>, <em>end</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.setTautomerRule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.similarity">
<code class="descname">similarity</code><span class="sig-paren">(</span><em>item1</em>, <em>item2</em>, <em>metrics=''</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.similarity" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.substructureMatcher">
<code class="descname">substructureMatcher</code><span class="sig-paren">(</span><em>target</em>, <em>mode=''</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.substructureMatcher" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.transform">
<code class="descname">transform</code><span class="sig-paren">(</span><em>reaction</em>, <em>monomers</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.transform" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.transformHELMtoSCSR">
<code class="descname">transformHELMtoSCSR</code><span class="sig-paren">(</span><em>item</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.transformHELMtoSCSR" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.unserialize">
<code class="descname">unserialize</code><span class="sig-paren">(</span><em>arr</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.unserialize" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.version">
<code class="descname">version</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.version" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.writeBuffer">
<code class="descname">writeBuffer</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.writeBuffer" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.Indigo.writeFile">
<code class="descname">writeFile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.Indigo.writeFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

</dd></dl>

</div>
<div class="section" id="indigoobject">
<h3>IndigoObject<a class="headerlink" href="#indigoobject" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="indigo.IndigoObject">
<em class="property">class </em><code class="descclassname">indigo.</code><code class="descname">IndigoObject</code><span class="sig-paren">(</span><em>dispatcher</em>, <em>id</em>, <em>parent=None</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject" title="Permalink to this definition">¶</a></dt>
<dd><dl class="method">
<dt id="indigo.IndigoObject.addAtom">
<code class="descname">addAtom</code><span class="sig-paren">(</span><em>symbol</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addAtom" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addBond">
<code class="descname">addBond</code><span class="sig-paren">(</span><em>destination</em>, <em>order</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addBond" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addCatalyst">
<code class="descname">addCatalyst</code><span class="sig-paren">(</span><em>molecule</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addCatalyst" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addConstraint">
<code class="descname">addConstraint</code><span class="sig-paren">(</span><em>type</em>, <em>value</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addConstraint" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addConstraintNot">
<code class="descname">addConstraintNot</code><span class="sig-paren">(</span><em>type</em>, <em>value</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addConstraintNot" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addConstraintOr">
<code class="descname">addConstraintOr</code><span class="sig-paren">(</span><em>type</em>, <em>value</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addConstraintOr" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addDataSGroup">
<code class="descname">addDataSGroup</code><span class="sig-paren">(</span><em>atoms</em>, <em>bonds</em>, <em>description</em>, <em>data</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addDataSGroup" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addDecomposition">
<code class="descname">addDecomposition</code><span class="sig-paren">(</span><em>q_match</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addDecomposition" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addProduct">
<code class="descname">addProduct</code><span class="sig-paren">(</span><em>molecule</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addProduct" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addRSite">
<code class="descname">addRSite</code><span class="sig-paren">(</span><em>name</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addRSite" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addReactant">
<code class="descname">addReactant</code><span class="sig-paren">(</span><em>molecule</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addReactant" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addSGroupAttachmentPoint">
<code class="descname">addSGroupAttachmentPoint</code><span class="sig-paren">(</span><em>aidx</em>, <em>lvidx</em>, <em>apid</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addSGroupAttachmentPoint" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addStereocenter">
<code class="descname">addStereocenter</code><span class="sig-paren">(</span><em>type</em>, <em>v1</em>, <em>v2</em>, <em>v3</em>, <em>v4=-1</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addStereocenter" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.addSuperatom">
<code class="descname">addSuperatom</code><span class="sig-paren">(</span><em>atoms</em>, <em>name</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.addSuperatom" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.alignAtoms">
<code class="descname">alignAtoms</code><span class="sig-paren">(</span><em>atom_ids</em>, <em>desired_xyz</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.alignAtoms" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.allScaffolds">
<code class="descname">allScaffolds</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.allScaffolds" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.append">
<code class="descname">append</code><span class="sig-paren">(</span><em>object</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.append" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.aromatize">
<code class="descname">aromatize</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.aromatize" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.arrayAdd">
<code class="descname">arrayAdd</code><span class="sig-paren">(</span><em>object</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.arrayAdd" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.at">
<code class="descname">at</code><span class="sig-paren">(</span><em>index</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.at" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.atomMappingNumber">
<code class="descname">atomMappingNumber</code><span class="sig-paren">(</span><em>reaction_atom</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.atomMappingNumber" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.atomicNumber">
<code class="descname">atomicNumber</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.atomicNumber" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.automap">
<code class="descname">automap</code><span class="sig-paren">(</span><em>mode=''</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.automap" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.bond">
<code class="descname">bond</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.bond" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.bondOrder">
<code class="descname">bondOrder</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.bondOrder" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.bondStereo">
<code class="descname">bondStereo</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.bondStereo" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.canonicalSmarts">
<code class="descname">canonicalSmarts</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.canonicalSmarts" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.canonicalSmiles">
<code class="descname">canonicalSmiles</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.canonicalSmiles" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.cdxml">
<code class="descname">cdxml</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.cdxml" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.changeStereocenterType">
<code class="descname">changeStereocenterType</code><span class="sig-paren">(</span><em>type</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.changeStereocenterType" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.charge">
<code class="descname">charge</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.charge" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.checkAmbiguousH">
<code class="descname">checkAmbiguousH</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.checkAmbiguousH" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.checkBadValence">
<code class="descname">checkBadValence</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.checkBadValence" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.checkQuery">
<code class="descname">checkQuery</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.checkQuery" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.checkRGroups">
<code class="descname">checkRGroups</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.checkRGroups" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.checkValence">
<code class="descname">checkValence</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.checkValence" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.clean2d">
<code class="descname">clean2d</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.clean2d" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.clear">
<code class="descname">clear</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.clear" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.clearAAM">
<code class="descname">clearAAM</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.clearAAM" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.clearAlleneCenters">
<code class="descname">clearAlleneCenters</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.clearAlleneCenters" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.clearAttachmentPoints">
<code class="descname">clearAttachmentPoints</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.clearAttachmentPoints" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.clearCisTrans">
<code class="descname">clearCisTrans</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.clearCisTrans" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.clearProperties">
<code class="descname">clearProperties</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.clearProperties" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.clearStereocenters">
<code class="descname">clearStereocenters</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.clearStereocenters" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.clone">
<code class="descname">clone</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.clone" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.close">
<code class="descname">close</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.close" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.cml">
<code class="descname">cml</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.cml" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.cmlAppend">
<code class="descname">cmlAppend</code><span class="sig-paren">(</span><em>item</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.cmlAppend" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.cmlFooter">
<code class="descname">cmlFooter</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.cmlFooter" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.cmlHeader">
<code class="descname">cmlHeader</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.cmlHeader" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.component">
<code class="descname">component</code><span class="sig-paren">(</span><em>index</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.component" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.componentIndex">
<code class="descname">componentIndex</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.componentIndex" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.correctReactingCenters">
<code class="descname">correctReactingCenters</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.correctReactingCenters" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.count">
<code class="descname">count</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.count" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countAlleneCenters">
<code class="descname">countAlleneCenters</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countAlleneCenters" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countAtoms">
<code class="descname">countAtoms</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countAtoms" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countAttachmentPoints">
<code class="descname">countAttachmentPoints</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countAttachmentPoints" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countBits">
<code class="descname">countBits</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countBits" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countBonds">
<code class="descname">countBonds</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countBonds" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countCatalysts">
<code class="descname">countCatalysts</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countCatalysts" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countComponents">
<code class="descname">countComponents</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countComponents" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countDataSGroups">
<code class="descname">countDataSGroups</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countDataSGroups" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countGenericSGroups">
<code class="descname">countGenericSGroups</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countGenericSGroups" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countHeavyAtoms">
<code class="descname">countHeavyAtoms</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countHeavyAtoms" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countHydrogens">
<code class="descname">countHydrogens</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countHydrogens" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countImplicitHydrogens">
<code class="descname">countImplicitHydrogens</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countImplicitHydrogens" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countMatches">
<code class="descname">countMatches</code><span class="sig-paren">(</span><em>query</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countMatches" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countMatchesWithLimit">
<code class="descname">countMatchesWithLimit</code><span class="sig-paren">(</span><em>query</em>, <em>embeddings_limit</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countMatchesWithLimit" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countMolecules">
<code class="descname">countMolecules</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countMolecules" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countMultipleGroups">
<code class="descname">countMultipleGroups</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countMultipleGroups" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countProducts">
<code class="descname">countProducts</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countProducts" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countPseudoatoms">
<code class="descname">countPseudoatoms</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countPseudoatoms" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countRGroups">
<code class="descname">countRGroups</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countRGroups" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countRSites">
<code class="descname">countRSites</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countRSites" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countReactants">
<code class="descname">countReactants</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countReactants" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countRepeatingUnits">
<code class="descname">countRepeatingUnits</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countRepeatingUnits" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countSSSR">
<code class="descname">countSSSR</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countSSSR" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countStereocenters">
<code class="descname">countStereocenters</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countStereocenters" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.countSuperatoms">
<code class="descname">countSuperatoms</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.countSuperatoms" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.createEdgeSubmolecule">
<code class="descname">createEdgeSubmolecule</code><span class="sig-paren">(</span><em>vertices</em>, <em>edges</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.createEdgeSubmolecule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.createSGroup">
<code class="descname">createSGroup</code><span class="sig-paren">(</span><em>sgtype</em>, <em>mapping</em>, <em>name</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.createSGroup" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.createSubmolecule">
<code class="descname">createSubmolecule</code><span class="sig-paren">(</span><em>vertices</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.createSubmolecule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.data">
<code class="descname">data</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.data" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.dbgInternalType">
<code class="descname">dbgInternalType</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.dbgInternalType" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.dearomatize">
<code class="descname">dearomatize</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.dearomatize" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.decomposeMolecule">
<code class="descname">decomposeMolecule</code><span class="sig-paren">(</span><em>mol</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.decomposeMolecule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.decomposedMoleculeHighlighted">
<code class="descname">decomposedMoleculeHighlighted</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.decomposedMoleculeHighlighted" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.decomposedMoleculeScaffold">
<code class="descname">decomposedMoleculeScaffold</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.decomposedMoleculeScaffold" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.decomposedMoleculeWithRGroups">
<code class="descname">decomposedMoleculeWithRGroups</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.decomposedMoleculeWithRGroups" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.degree">
<code class="descname">degree</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.degree" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.deleteSGroupAttachmentPoint">
<code class="descname">deleteSGroupAttachmentPoint</code><span class="sig-paren">(</span><em>apidx</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.deleteSGroupAttachmentPoint" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.description">
<code class="descname">description</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.description" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.destination">
<code class="descname">destination</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.destination" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.dispose">
<code class="descname">dispose</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.dispose" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.expandAbbreviations">
<code class="descname">expandAbbreviations</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.expandAbbreviations" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.findSGroups">
<code class="descname">findSGroups</code><span class="sig-paren">(</span><em>prop</em>, <em>val</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.findSGroups" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.fingerprint">
<code class="descname">fingerprint</code><span class="sig-paren">(</span><em>type</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.fingerprint" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.foldHydrogens">
<code class="descname">foldHydrogens</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.foldHydrogens" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getAcidPkaValue">
<code class="descname">getAcidPkaValue</code><span class="sig-paren">(</span><em>atom</em>, <em>level</em>, <em>min_level</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getAcidPkaValue" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getAtom">
<code class="descname">getAtom</code><span class="sig-paren">(</span><em>idx</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getAtom" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getBasicPkaValue">
<code class="descname">getBasicPkaValue</code><span class="sig-paren">(</span><em>atom</em>, <em>level</em>, <em>min_level</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getBasicPkaValue" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getBond">
<code class="descname">getBond</code><span class="sig-paren">(</span><em>idx</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getBond" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getDataSGroup">
<code class="descname">getDataSGroup</code><span class="sig-paren">(</span><em>index</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getDataSGroup" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getExplicitValence">
<code class="descname">getExplicitValence</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getExplicitValence" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getGenericSGroup">
<code class="descname">getGenericSGroup</code><span class="sig-paren">(</span><em>index</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getGenericSGroup" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getMolecule">
<code class="descname">getMolecule</code><span class="sig-paren">(</span><em>index</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getMolecule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getMultipleGroup">
<code class="descname">getMultipleGroup</code><span class="sig-paren">(</span><em>index</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getMultipleGroup" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getProperty">
<code class="descname">getProperty</code><span class="sig-paren">(</span><em>prop</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getProperty" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getRepeatingUnit">
<code class="descname">getRepeatingUnit</code><span class="sig-paren">(</span><em>index</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getRepeatingUnit" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getRepeatingUnitConnectivity">
<code class="descname">getRepeatingUnitConnectivity</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getRepeatingUnitConnectivity" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getRepeatingUnitSubscript">
<code class="descname">getRepeatingUnitSubscript</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getRepeatingUnitSubscript" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getSGroupClass">
<code class="descname">getSGroupClass</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getSGroupClass" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getSGroupDisplayOption">
<code class="descname">getSGroupDisplayOption</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getSGroupDisplayOption" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getSGroupIndex">
<code class="descname">getSGroupIndex</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getSGroupIndex" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getSGroupMultiplier">
<code class="descname">getSGroupMultiplier</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getSGroupMultiplier" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getSGroupName">
<code class="descname">getSGroupName</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getSGroupName" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getSGroupNumCrossBonds">
<code class="descname">getSGroupNumCrossBonds</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getSGroupNumCrossBonds" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getSGroupOriginalId">
<code class="descname">getSGroupOriginalId</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getSGroupOriginalId" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getSGroupParentId">
<code class="descname">getSGroupParentId</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getSGroupParentId" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getSGroupSeqId">
<code class="descname">getSGroupSeqId</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getSGroupSeqId" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getSGroupType">
<code class="descname">getSGroupType</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getSGroupType" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getSubmolecule">
<code class="descname">getSubmolecule</code><span class="sig-paren">(</span><em>vertices</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getSubmolecule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.getSuperatom">
<code class="descname">getSuperatom</code><span class="sig-paren">(</span><em>index</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.getSuperatom" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.grossFormula">
<code class="descname">grossFormula</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.grossFormula" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.hasCoord">
<code class="descname">hasCoord</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.hasCoord" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.hasNext">
<code class="descname">hasNext</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.hasNext" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.hasProperty">
<code class="descname">hasProperty</code><span class="sig-paren">(</span><em>prop</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.hasProperty" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.hasZCoord">
<code class="descname">hasZCoord</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.hasZCoord" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.highlight">
<code class="descname">highlight</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.highlight" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.highlightedTarget">
<code class="descname">highlightedTarget</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.highlightedTarget" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.ignoreAtom">
<code class="descname">ignoreAtom</code><span class="sig-paren">(</span><em>atom_object</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.ignoreAtom" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.index">
<code class="descname">index</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.index" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.invertStereo">
<code class="descname">invertStereo</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.invertStereo" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.ionize">
<code class="descname">ionize</code><span class="sig-paren">(</span><em>pH</em>, <em>pH_toll</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.ionize" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.isChiral">
<code class="descname">isChiral</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.isChiral" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.isHighlighted">
<code class="descname">isHighlighted</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.isHighlighted" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.isPossibleFischerProjection">
<code class="descname">isPossibleFischerProjection</code><span class="sig-paren">(</span><em>options</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.isPossibleFischerProjection" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.isPseudoatom">
<code class="descname">isPseudoatom</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.isPseudoatom" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.isRSite">
<code class="descname">isRSite</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.isRSite" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.isotope">
<code class="descname">isotope</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.isotope" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateAlleneCenters">
<code class="descname">iterateAlleneCenters</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateAlleneCenters" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateArray">
<code class="descname">iterateArray</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateArray" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateAtoms">
<code class="descname">iterateAtoms</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateAtoms" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateAttachmentPoints">
<code class="descname">iterateAttachmentPoints</code><span class="sig-paren">(</span><em>order</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateAttachmentPoints" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateBonds">
<code class="descname">iterateBonds</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateBonds" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateCatalysts">
<code class="descname">iterateCatalysts</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateCatalysts" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateComponents">
<code class="descname">iterateComponents</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateComponents" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateDataSGroups">
<code class="descname">iterateDataSGroups</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateDataSGroups" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateDecomposedMolecules">
<code class="descname">iterateDecomposedMolecules</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateDecomposedMolecules" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateDecompositions">
<code class="descname">iterateDecompositions</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateDecompositions" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateEdgeSubmolecules">
<code class="descname">iterateEdgeSubmolecules</code><span class="sig-paren">(</span><em>min_bonds</em>, <em>max_bonds</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateEdgeSubmolecules" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateGenericSGroups">
<code class="descname">iterateGenericSGroups</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateGenericSGroups" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateMatches">
<code class="descname">iterateMatches</code><span class="sig-paren">(</span><em>query</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateMatches" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateMolecules">
<code class="descname">iterateMolecules</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateMolecules" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateMultipleGroups">
<code class="descname">iterateMultipleGroups</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateMultipleGroups" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateNeighbors">
<code class="descname">iterateNeighbors</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateNeighbors" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateProducts">
<code class="descname">iterateProducts</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateProducts" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateProperties">
<code class="descname">iterateProperties</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateProperties" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iteratePseudoatoms">
<code class="descname">iteratePseudoatoms</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iteratePseudoatoms" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateRGroupFragments">
<code class="descname">iterateRGroupFragments</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateRGroupFragments" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateRGroups">
<code class="descname">iterateRGroups</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateRGroups" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateRSites">
<code class="descname">iterateRSites</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateRSites" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateReactants">
<code class="descname">iterateReactants</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateReactants" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateRepeatingUnits">
<code class="descname">iterateRepeatingUnits</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateRepeatingUnits" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateRings">
<code class="descname">iterateRings</code><span class="sig-paren">(</span><em>min_atoms</em>, <em>max_atoms</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateRings" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateSGroups">
<code class="descname">iterateSGroups</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateSGroups" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateSSSR">
<code class="descname">iterateSSSR</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateSSSR" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateStereocenters">
<code class="descname">iterateStereocenters</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateStereocenters" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateSubtrees">
<code class="descname">iterateSubtrees</code><span class="sig-paren">(</span><em>min_atoms</em>, <em>max_atoms</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateSubtrees" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.iterateSuperatoms">
<code class="descname">iterateSuperatoms</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.iterateSuperatoms" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.layeredCode">
<code class="descname">layeredCode</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.layeredCode" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.layout">
<code class="descname">layout</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.layout" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.mapAtom">
<code class="descname">mapAtom</code><span class="sig-paren">(</span><em>atom</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.mapAtom" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.mapBond">
<code class="descname">mapBond</code><span class="sig-paren">(</span><em>bond</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.mapBond" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.mapMolecule">
<code class="descname">mapMolecule</code><span class="sig-paren">(</span><em>molecule</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.mapMolecule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.markEitherCisTrans">
<code class="descname">markEitherCisTrans</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.markEitherCisTrans" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.markStereobonds">
<code class="descname">markStereobonds</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.markStereobonds" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.massComposition">
<code class="descname">massComposition</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.massComposition" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.match">
<code class="descname">match</code><span class="sig-paren">(</span><em>query</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.match" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.mdlct">
<code class="descname">mdlct</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.mdlct" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.merge">
<code class="descname">merge</code><span class="sig-paren">(</span><em>what</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.merge" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.molecularWeight">
<code class="descname">molecularWeight</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.molecularWeight" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.molfile">
<code class="descname">molfile</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.molfile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.monoisotopicMass">
<code class="descname">monoisotopicMass</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.monoisotopicMass" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.mostAbundantMass">
<code class="descname">mostAbundantMass</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.mostAbundantMass" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.name">
<code class="descname">name</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.name" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.next">
<code class="descname">next</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.next" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.normalize">
<code class="descname">normalize</code><span class="sig-paren">(</span><em>options=''</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.normalize" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.oneBitsList">
<code class="descname">oneBitsList</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.oneBitsList" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.optimize">
<code class="descname">optimize</code><span class="sig-paren">(</span><em>options=''</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.optimize" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.radical">
<code class="descname">radical</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.radical" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.radicalElectrons">
<code class="descname">radicalElectrons</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.radicalElectrons" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.rawData">
<code class="descname">rawData</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.rawData" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.rdfAppend">
<code class="descname">rdfAppend</code><span class="sig-paren">(</span><em>item</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.rdfAppend" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.rdfHeader">
<code class="descname">rdfHeader</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.rdfHeader" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.reactingCenter">
<code class="descname">reactingCenter</code><span class="sig-paren">(</span><em>reaction_bond</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.reactingCenter" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.remove">
<code class="descname">remove</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.remove" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.removeAtoms">
<code class="descname">removeAtoms</code><span class="sig-paren">(</span><em>vertices</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.removeAtoms" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.removeBonds">
<code class="descname">removeBonds</code><span class="sig-paren">(</span><em>bonds</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.removeBonds" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.removeConstraints">
<code class="descname">removeConstraints</code><span class="sig-paren">(</span><em>type</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.removeConstraints" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.removeProperty">
<code class="descname">removeProperty</code><span class="sig-paren">(</span><em>prop</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.removeProperty" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.resetAtom">
<code class="descname">resetAtom</code><span class="sig-paren">(</span><em>symbol</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.resetAtom" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.resetCharge">
<code class="descname">resetCharge</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.resetCharge" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.resetExplicitValence">
<code class="descname">resetExplicitValence</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.resetExplicitValence" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.resetIsotope">
<code class="descname">resetIsotope</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.resetIsotope" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.resetRadical">
<code class="descname">resetRadical</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.resetRadical" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.resetStereo">
<code class="descname">resetStereo</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.resetStereo" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.resetSymmetricCisTrans">
<code class="descname">resetSymmetricCisTrans</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.resetSymmetricCisTrans" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.resetSymmetricStereocenters">
<code class="descname">resetSymmetricStereocenters</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.resetSymmetricStereocenters" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.rxnfile">
<code class="descname">rxnfile</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.rxnfile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.saveCdxml">
<code class="descname">saveCdxml</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.saveCdxml" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.saveCml">
<code class="descname">saveCml</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.saveCml" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.saveMDLCT">
<code class="descname">saveMDLCT</code><span class="sig-paren">(</span><em>output</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.saveMDLCT" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.saveMolfile">
<code class="descname">saveMolfile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.saveMolfile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.saveRxnfile">
<code class="descname">saveRxnfile</code><span class="sig-paren">(</span><em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.saveRxnfile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.sdfAppend">
<code class="descname">sdfAppend</code><span class="sig-paren">(</span><em>item</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.sdfAppend" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.serialize">
<code class="descname">serialize</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.serialize" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setAtomMappingNumber">
<code class="descname">setAtomMappingNumber</code><span class="sig-paren">(</span><em>reaction_atom</em>, <em>number</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setAtomMappingNumber" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setAttachmentPoint">
<code class="descname">setAttachmentPoint</code><span class="sig-paren">(</span><em>order</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setAttachmentPoint" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setBondOrder">
<code class="descname">setBondOrder</code><span class="sig-paren">(</span><em>order</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setBondOrder" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setCharge">
<code class="descname">setCharge</code><span class="sig-paren">(</span><em>charge</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setCharge" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setDataSGroupXY">
<code class="descname">setDataSGroupXY</code><span class="sig-paren">(</span><em>x</em>, <em>y</em>, <em>options=''</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setDataSGroupXY" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setExplicitValence">
<code class="descname">setExplicitValence</code><span class="sig-paren">(</span><em>valence</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setExplicitValence" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setImplicitHCount">
<code class="descname">setImplicitHCount</code><span class="sig-paren">(</span><em>impl_h</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setImplicitHCount" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setIsotope">
<code class="descname">setIsotope</code><span class="sig-paren">(</span><em>isotope</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setIsotope" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setName">
<code class="descname">setName</code><span class="sig-paren">(</span><em>name</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setName" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setProperty">
<code class="descname">setProperty</code><span class="sig-paren">(</span><em>prop</em>, <em>value</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setProperty" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setRSite">
<code class="descname">setRSite</code><span class="sig-paren">(</span><em>name</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setRSite" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setRadical">
<code class="descname">setRadical</code><span class="sig-paren">(</span><em>radical</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setRadical" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setReactingCenter">
<code class="descname">setReactingCenter</code><span class="sig-paren">(</span><em>reaction_bond</em>, <em>rc</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setReactingCenter" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupBrackets">
<code class="descname">setSGroupBrackets</code><span class="sig-paren">(</span><em>style</em>, <em>x1</em>, <em>y1</em>, <em>x2</em>, <em>y2</em>, <em>x3</em>, <em>y3</em>, <em>x4</em>, <em>y4</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupBrackets" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupClass">
<code class="descname">setSGroupClass</code><span class="sig-paren">(</span><em>sgclass</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupClass" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupCoords">
<code class="descname">setSGroupCoords</code><span class="sig-paren">(</span><em>x</em>, <em>y</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupCoords" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupData">
<code class="descname">setSGroupData</code><span class="sig-paren">(</span><em>data</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupData" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupDataType">
<code class="descname">setSGroupDataType</code><span class="sig-paren">(</span><em>data_type</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupDataType" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupDescription">
<code class="descname">setSGroupDescription</code><span class="sig-paren">(</span><em>description</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupDescription" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupDisplay">
<code class="descname">setSGroupDisplay</code><span class="sig-paren">(</span><em>option</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupDisplay" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupDisplayOption">
<code class="descname">setSGroupDisplayOption</code><span class="sig-paren">(</span><em>option</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupDisplayOption" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupFieldName">
<code class="descname">setSGroupFieldName</code><span class="sig-paren">(</span><em>name</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupFieldName" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupLocation">
<code class="descname">setSGroupLocation</code><span class="sig-paren">(</span><em>option</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupLocation" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupMultiplier">
<code class="descname">setSGroupMultiplier</code><span class="sig-paren">(</span><em>mult</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupMultiplier" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupName">
<code class="descname">setSGroupName</code><span class="sig-paren">(</span><em>sgname</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupName" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupOriginalId">
<code class="descname">setSGroupOriginalId</code><span class="sig-paren">(</span><em>original</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupOriginalId" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupParentId">
<code class="descname">setSGroupParentId</code><span class="sig-paren">(</span><em>parent</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupParentId" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupQueryCode">
<code class="descname">setSGroupQueryCode</code><span class="sig-paren">(</span><em>code</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupQueryCode" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupQueryOper">
<code class="descname">setSGroupQueryOper</code><span class="sig-paren">(</span><em>oper</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupQueryOper" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupTag">
<code class="descname">setSGroupTag</code><span class="sig-paren">(</span><em>tag</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupTag" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupTagAlign">
<code class="descname">setSGroupTagAlign</code><span class="sig-paren">(</span><em>tag_align</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupTagAlign" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupXCoord">
<code class="descname">setSGroupXCoord</code><span class="sig-paren">(</span><em>x</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupXCoord" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setSGroupYCoord">
<code class="descname">setSGroupYCoord</code><span class="sig-paren">(</span><em>y</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setSGroupYCoord" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setStereocenterGroup">
<code class="descname">setStereocenterGroup</code><span class="sig-paren">(</span><em>group</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setStereocenterGroup" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.setXYZ">
<code class="descname">setXYZ</code><span class="sig-paren">(</span><em>x</em>, <em>y</em>, <em>z</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.setXYZ" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.singleAllowedRGroup">
<code class="descname">singleAllowedRGroup</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.singleAllowedRGroup" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.smarts">
<code class="descname">smarts</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.smarts" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.smiles">
<code class="descname">smiles</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.smiles" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.smilesAppend">
<code class="descname">smilesAppend</code><span class="sig-paren">(</span><em>item</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.smilesAppend" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.source">
<code class="descname">source</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.source" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.standardize">
<code class="descname">standardize</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.standardize" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.stereocenterGroup">
<code class="descname">stereocenterGroup</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.stereocenterGroup" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.stereocenterPyramid">
<code class="descname">stereocenterPyramid</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.stereocenterPyramid" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.stereocenterType">
<code class="descname">stereocenterType</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.stereocenterType" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.symbol">
<code class="descname">symbol</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.symbol" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.symmetryClasses">
<code class="descname">symmetryClasses</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.symmetryClasses" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.tell">
<code class="descname">tell</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.tell" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.toBuffer">
<code class="descname">toBuffer</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.toBuffer" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.toString">
<code class="descname">toString</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.toString" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.topology">
<code class="descname">topology</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.topology" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.transformCTABtoSCSR">
<code class="descname">transformCTABtoSCSR</code><span class="sig-paren">(</span><em>templates</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.transformCTABtoSCSR" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.transformSCSRtoCTAB">
<code class="descname">transformSCSRtoCTAB</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.transformSCSRtoCTAB" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.unfoldHydrogens">
<code class="descname">unfoldHydrogens</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.unfoldHydrogens" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.unhighlight">
<code class="descname">unhighlight</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.unhighlight" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.unignoreAllAtoms">
<code class="descname">unignoreAllAtoms</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.unignoreAllAtoms" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.unignoreAtom">
<code class="descname">unignoreAtom</code><span class="sig-paren">(</span><em>atom_object</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.unignoreAtom" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.valence">
<code class="descname">valence</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.valence" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.validateChirality">
<code class="descname">validateChirality</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.validateChirality" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo.IndigoObject.xyz">
<code class="descname">xyz</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo.IndigoObject.xyz" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

</dd></dl>

</div>
<div class="section" id="indigorenderer">
<h3>IndigoRenderer<a class="headerlink" href="#indigorenderer" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="indigo_renderer.IndigoRenderer">
<em class="property">class </em><code class="descclassname">indigo_renderer.</code><code class="descname">IndigoRenderer</code><span class="sig-paren">(</span><em>indigo</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo_renderer.IndigoRenderer" title="Permalink to this definition">¶</a></dt>
<dd><dl class="method">
<dt id="indigo_renderer.IndigoRenderer.renderGridToBuffer">
<code class="descname">renderGridToBuffer</code><span class="sig-paren">(</span><em>objects</em>, <em>refatoms</em>, <em>ncolumns</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo_renderer.IndigoRenderer.renderGridToBuffer" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo_renderer.IndigoRenderer.renderGridToFile">
<code class="descname">renderGridToFile</code><span class="sig-paren">(</span><em>objects</em>, <em>refatoms</em>, <em>ncolumns</em>, <em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo_renderer.IndigoRenderer.renderGridToFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo_renderer.IndigoRenderer.renderToBuffer">
<code class="descname">renderToBuffer</code><span class="sig-paren">(</span><em>obj</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo_renderer.IndigoRenderer.renderToBuffer" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo_renderer.IndigoRenderer.renderToFile">
<code class="descname">renderToFile</code><span class="sig-paren">(</span><em>obj</em>, <em>filename</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo_renderer.IndigoRenderer.renderToFile" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

</dd></dl>

</div>
<div class="section" id="indigoinchi">
<h3>IndigoInchi<a class="headerlink" href="#indigoinchi" title="Permalink to this headline">¶</a></h3>
<dl class="class">
<dt id="indigo_inchi.IndigoInchi">
<em class="property">class </em><code class="descclassname">indigo_inchi.</code><code class="descname">IndigoInchi</code><span class="sig-paren">(</span><em>indigo</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo_inchi.IndigoInchi" title="Permalink to this definition">¶</a></dt>
<dd><dl class="method">
<dt id="indigo_inchi.IndigoInchi.getAuxInfo">
<code class="descname">getAuxInfo</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo_inchi.IndigoInchi.getAuxInfo" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo_inchi.IndigoInchi.getInchi">
<code class="descname">getInchi</code><span class="sig-paren">(</span><em>molecule</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo_inchi.IndigoInchi.getInchi" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo_inchi.IndigoInchi.getInchiKey">
<code class="descname">getInchiKey</code><span class="sig-paren">(</span><em>inchi</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo_inchi.IndigoInchi.getInchiKey" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo_inchi.IndigoInchi.getLog">
<code class="descname">getLog</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo_inchi.IndigoInchi.getLog" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo_inchi.IndigoInchi.getWarning">
<code class="descname">getWarning</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo_inchi.IndigoInchi.getWarning" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo_inchi.IndigoInchi.loadMolecule">
<code class="descname">loadMolecule</code><span class="sig-paren">(</span><em>inchi</em><span class="sig-paren">)</span><a class="headerlink" href="#indigo_inchi.IndigoInchi.loadMolecule" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo_inchi.IndigoInchi.resetOptions">
<code class="descname">resetOptions</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo_inchi.IndigoInchi.resetOptions" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="indigo_inchi.IndigoInchi.version">
<code class="descname">version</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#indigo_inchi.IndigoInchi.version" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

</dd></dl>

</div>
</div>
<div class="section" id="plain-c">
<h2>Plain C<a class="headerlink" href="#plain-c" title="Permalink to this headline">¶</a></h2>
<div class="section" id="core-indigo-api">
<h3>Core Indigo API<a class="headerlink" href="#core-indigo-api" title="Permalink to this headline">¶</a></h3>
<div class="highlight-c"><div class="highlight"><pre><span></span><span class="cm">/****************************************************************************</span>
<span class="cm"> * Copyright (C) 2009-2015 EPAM Systems</span>
<span class="cm"> *</span>
<span class="cm"> * This file is part of Indigo toolkit.</span>
<span class="cm"> *</span>
<span class="cm"> * This file may be distributed and/or modified under the terms of the</span>
<span class="cm"> * GNU General Public License version 3 as published by the Free Software</span>
<span class="cm"> * Foundation and appearing in the file LICENSE.GPL included in the</span>
<span class="cm"> * packaging of this file.</span>
<span class="cm"> *</span>
<span class="cm"> * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE</span>
<span class="cm"> * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.</span>
<span class="cm"> ***************************************************************************/</span>

<span class="cp">#ifndef __indigo__</span>
<span class="cp">#define __indigo__</span>

<span class="cp">#if defined(_WIN32)  &amp;&amp; !defined(__MINGW32__)</span>
<span class="cp">#define qword unsigned _int64</span>
<span class="cp">#else</span>
<span class="cp">#define qword unsigned long long</span>
<span class="cp">#endif</span>

<span class="cp">#ifndef EXPORT_SYMBOL</span>
   <span class="cp">#ifdef _WIN32</span>
      <span class="cp">#define EXPORT_SYMBOL __declspec(dllexport)</span>
   <span class="cp">#elif (defined __GNUC__ || defined __APPLE__)</span>
      <span class="cp">#define EXPORT_SYMBOL __attribute__ ((visibility (&quot;default&quot;)))</span>
   <span class="cp">#else</span>
      <span class="cp">#define EXPORT_SYMBOL</span>
   <span class="cp">#endif</span>
<span class="cp">#endif</span>

<span class="cp">#ifndef CEXPORT</span>
   <span class="cp">#ifndef __cplusplus</span>
      <span class="cp">#define CEXPORT EXPORT_SYMBOL</span>
   <span class="cp">#else</span>
      <span class="cp">#define CEXPORT extern &quot;C&quot; EXPORT_SYMBOL</span>
   <span class="cp">#endif</span>
<span class="cp">#endif</span>

<span class="cp">#ifndef __byte_typedef__</span>
<span class="cp">#define __byte_typedef__</span>
<span class="k">typedef</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">byte</span><span class="p">;</span>
<span class="cp">#endif</span>

<span class="cm">/* All integer and float functions return -1 on error. */</span>
<span class="cm">/* All string functions return zero pointer on error. */</span>

<span class="cm">/* Almost all string functions return the same pointer on success;</span>
<span class="cm">   you should not free() it, but rather strdup() it if you want to keep it. */</span>

<span class="cm">/* System */</span>

<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoVersion</span> <span class="p">();</span>

<span class="c1">// Allocate a new session. Each session has its own</span>
<span class="c1">// set of objects created and options set up.</span>
<span class="n">CEXPORT</span> <span class="n">qword</span> <span class="nf">indigoAllocSessionId</span>   <span class="p">();</span>
<span class="c1">// Switch to another session. The session, if was not allocated</span>
<span class="c1">// previously, is allocated automatically and initialized with</span>
<span class="c1">// empty set of objects and default options.</span>
<span class="n">CEXPORT</span> <span class="kt">void</span>  <span class="nf">indigoSetSessionId</span>     <span class="p">(</span><span class="n">qword</span> <span class="n">id</span><span class="p">);</span>
<span class="c1">// Release session. The memory used by the released session</span>
<span class="c1">// is not freed, but the number will be reused on</span>
<span class="c1">// further allocations.</span>
<span class="n">CEXPORT</span> <span class="kt">void</span>  <span class="nf">indigoReleaseSessionId</span> <span class="p">(</span><span class="n">qword</span> <span class="n">id</span><span class="p">);</span>


<span class="c1">// Get the last error message</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoGetLastError</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>

<span class="k">typedef</span> <span class="nf">void</span> <span class="p">(</span><span class="o">*</span><span class="n">INDIGO_ERROR_HANDLER</span><span class="p">)(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">message</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">context</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">void</span> <span class="nf">indigoSetErrorHandler</span> <span class="p">(</span><span class="n">INDIGO_ERROR_HANDLER</span> <span class="n">handler</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">context</span><span class="p">);</span>

<span class="c1">// Free an object</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoFree</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>
<span class="c1">// Clone an object</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoClone</span> <span class="p">(</span><span class="kt">int</span> <span class="n">object</span><span class="p">);</span>
<span class="c1">// Count object currently allocated</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountReferences</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>

<span class="c1">// Deallocate all the objects in the current session</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoFreeAllObjects</span> <span class="p">();</span>

<span class="cm">/* Options */</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetOption</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetOptionInt</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="kt">int</span> <span class="n">value</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetOptionBool</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="kt">int</span> <span class="n">value</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetOptionFloat</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="kt">float</span> <span class="n">value</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetOptionColor</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="kt">float</span> <span class="n">r</span><span class="p">,</span> <span class="kt">float</span> <span class="n">g</span><span class="p">,</span> <span class="kt">float</span> <span class="n">b</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetOptionXY</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoResetOptions</span> <span class="p">();</span>

<span class="cm">/* Basic input-output */</span>

<span class="c1">// indigoRead*** return a new reader object.</span>
<span class="c1">// indigoLoad*** return a new reader object which already</span>
<span class="c1">// contains all the data and does not depend on the given</span>
<span class="c1">// string/buffer. All these functions are low-level and</span>
<span class="c1">// rarely needed to anyone.</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoReadFile</span>   <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoReadString</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadString</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoReadBuffer</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadBuffer</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">);</span>

<span class="c1">// indigoWrite*** return a new writer object.</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoWriteFile</span>   <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoWriteBuffer</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>

<span class="c1">// Closes the file output stream but does not delete the object</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoClose</span> <span class="p">(</span><span class="kt">int</span> <span class="n">output</span><span class="p">);</span>

<span class="cm">/* Iterators */</span>

<span class="cm">/* Iterators work in the following way:</span>
<span class="cm"> *</span>
<span class="cm"> * int item, iter = indigoIterate***(...)</span>
<span class="cm"> *</span>
<span class="cm"> * if (iter == -1)</span>
<span class="cm"> * {</span>
<span class="cm"> *    fprintf(stderr, &quot;%s&quot;, indigoGetLastError());</span>
<span class="cm"> *    return;</span>
<span class="cm"> * }</span>
<span class="cm"> *</span>
<span class="cm"> * while (item = indigoNext(iter))</span>
<span class="cm"> * {</span>
<span class="cm"> *    if (item == -1)</span>
<span class="cm"> *    {</span>
<span class="cm"> *       fprintf(stderr, &quot;%s&quot;, indigoGetLastError());</span>
<span class="cm"> *       break;</span>
<span class="cm"> *    }</span>
<span class="cm"> *</span>
<span class="cm"> *    printf(&quot;on item #%d\n&quot;, indigoIndex(item));</span>
<span class="cm"> *</span>
<span class="cm"> *    // do something with item</span>
<span class="cm"> *</span>
<span class="cm"> *    indigoFree(item);</span>
<span class="cm"> * }</span>
<span class="cm"> * indigoFree(iter);</span>
<span class="cm"> */</span>

<span class="c1">// Obtains the next element, returns zero if there is no next element</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoNext</span> <span class="p">(</span><span class="kt">int</span> <span class="n">iter</span><span class="p">);</span>
<span class="c1">// Does not obtain the next element, just tells if there is one</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoHasNext</span> <span class="p">(</span><span class="kt">int</span> <span class="n">iter</span><span class="p">);</span>
<span class="c1">// Returns the index of the element</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIndex</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="c1">// Removes the item from its container (usually a molecule)</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoRemove</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="cm">/* Molecules, query molecules, SMARTS */</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCreateMolecule</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCreateQueryMolecule</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadMolecule</span>  <span class="p">(</span><span class="kt">int</span> <span class="n">source</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadMoleculeFromString</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadMoleculeFromFile</span>   <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadMoleculeFromBuffer</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadQueryMolecule</span> <span class="p">(</span><span class="kt">int</span> <span class="n">source</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadQueryMoleculeFromString</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadQueryMoleculeFromFile</span>   <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadQueryMoleculeFromBuffer</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadSmarts</span> <span class="p">(</span><span class="kt">int</span> <span class="n">source</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadSmartsFromString</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadSmartsFromFile</span>   <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadSmartsFromBuffer</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSaveMolfile</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">output</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSaveMolfileToFile</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoMolfile</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="c1">// accepts molecules and reactions (but not query ones)</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSaveCml</span> <span class="p">(</span><span class="kt">int</span> <span class="n">object</span><span class="p">,</span> <span class="kt">int</span> <span class="n">output</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSaveCmlToFile</span> <span class="p">(</span><span class="kt">int</span> <span class="n">object</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoCml</span> <span class="p">(</span><span class="kt">int</span> <span class="n">object</span><span class="p">);</span>

<span class="c1">// accepts molecules and reactions </span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSaveCdxml</span> <span class="p">(</span><span class="kt">int</span> <span class="n">object</span><span class="p">,</span> <span class="kt">int</span> <span class="n">output</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSaveCdxmlToFile</span> <span class="p">(</span><span class="kt">int</span> <span class="n">object</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoCdxml</span> <span class="p">(</span><span class="kt">int</span> <span class="n">object</span><span class="p">);</span>

<span class="c1">// the output must be a file or a buffer, but not a string</span>
<span class="c1">// (because MDLCT data usually contains zeroes)</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSaveMDLCT</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="kt">int</span> <span class="n">output</span><span class="p">);</span>

<span class="cm">/*</span>
<span class="cm">Converts a chemical name into a corresponding structure</span>
<span class="cm">Returns -1 if parsing fails or no structure is found</span>
<span class="cm">Parameters:</span>
<span class="cm">   name - a name to parse</span>
<span class="cm">   params - a string containing parsing options or nullptr if no options are changed</span>
<span class="cm">*/</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoNameToStructure</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">name</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">params</span><span class="p">);</span>

<span class="cm">/* Reactions, query reactions */</span>
<span class="cm">/*</span>
<span class="cm"> * Reaction centers</span>
<span class="cm"> */</span>
<span class="k">enum</span>
<span class="p">{</span>
   <span class="n">INDIGO_RC_NOT_CENTER</span>     <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>
   <span class="n">INDIGO_RC_UNMARKED</span>       <span class="o">=</span>  <span class="mi">0</span><span class="p">,</span>
   <span class="n">INDIGO_RC_CENTER</span>         <span class="o">=</span>  <span class="mi">1</span><span class="p">,</span>
   <span class="n">INDIGO_RC_UNCHANGED</span>      <span class="o">=</span>  <span class="mi">2</span><span class="p">,</span>
   <span class="n">INDIGO_RC_MADE_OR_BROKEN</span> <span class="o">=</span>  <span class="mi">4</span><span class="p">,</span>
   <span class="n">INDIGO_RC_ORDER_CHANGED</span>  <span class="o">=</span>  <span class="mi">8</span>
<span class="p">};</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadReaction</span>  <span class="p">(</span><span class="kt">int</span> <span class="n">source</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadReactionFromString</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadReactionFromFile</span>   <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadReactionFromBuffer</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadQueryReaction</span> <span class="p">(</span><span class="kt">int</span> <span class="n">source</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadQueryReactionFromString</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadQueryReactionFromFile</span>   <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadQueryReactionFromBuffer</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadReactionSmarts</span> <span class="p">(</span><span class="kt">int</span> <span class="n">source</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadReactionSmartsFromString</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadReactionSmartsFromFile</span>   <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLoadReactionSmartsFromBuffer</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">);</span>


<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCreateReaction</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCreateQueryReaction</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddReactant</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddProduct</span>  <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddCatalyst</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountReactants</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountProducts</span>  <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountCatalysts</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">);</span>
<span class="c1">// Counts reactants, products, and catalysts.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountMolecules</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetMolecule</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="kt">int</span> <span class="n">index</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateReactants</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateProducts</span>  <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateCatalysts</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">);</span>
<span class="c1">// Returns an iterator for reactants, products, and catalysts.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateMolecules</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSaveRxnfile</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="kt">int</span> <span class="n">output</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSaveRxnfileToFile</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoRxnfile</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">);</span>

<span class="c1">// Method for query optimizations for faster substructure search</span>
<span class="c1">// (works for both query molecules and query reactions)</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoOptimize</span> <span class="p">(</span><span class="kt">int</span> <span class="n">query</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">options</span><span class="p">);</span>

<span class="c1">// Methods for structure normalization</span>
<span class="c1">// It neutrailzes charges, resolves 5-valence Nitrogen, removes hydrogens and etc.</span>
<span class="c1">// Default options is empty.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoNormalize</span> <span class="p">(</span><span class="kt">int</span> <span class="n">structure</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">options</span><span class="p">);</span>

<span class="c1">// Method for molecule and query standardizing</span>
<span class="c1">// It stadrdize charges, stereo and etc.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoStandardize</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="c1">// Method for structure ionization at specified pH and pH tollerance</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIonize</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="kt">float</span> <span class="n">pH</span><span class="p">,</span> <span class="kt">float</span> <span class="n">pH_toll</span><span class="p">);</span>

<span class="c1">// Method for building PKA model</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoBuildPkaModel</span> <span class="p">(</span><span class="kt">int</span> <span class="n">max_level</span><span class="p">,</span> <span class="kt">float</span> <span class="n">threshold</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">float</span> <span class="o">*</span> <span class="nf">indigoGetAcidPkaValue</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="n">level</span><span class="p">,</span> <span class="kt">int</span> <span class="n">min_level</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">float</span> <span class="o">*</span> <span class="nf">indigoGetBasicPkaValue</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="n">level</span><span class="p">,</span> <span class="kt">int</span> <span class="n">min_level</span><span class="p">);</span>

<span class="c1">// Automatic reaction atom-to-atom mapping</span>
<span class="c1">// mode is one of the following (separated by a space):</span>
<span class="c1">//    &quot;discard&quot; : discards the existing mapping entirely and considers only</span>
<span class="c1">//                the existing reaction centers (the default)</span>
<span class="c1">//    &quot;keep&quot;    : keeps the existing mapping and maps unmapped atoms</span>
<span class="c1">//    &quot;alter&quot;   : alters the existing mapping, and maps the rest of the</span>
<span class="c1">//                reaction but may change the existing mapping</span>
<span class="c1">//    &quot;clear&quot;   : removes the mapping from the reaction.</span>
<span class="c1">//</span>
<span class="c1">//    &quot;ignore_charges&quot; : do not consider atom charges while searching</span>
<span class="c1">//    &quot;ignore_isotopes&quot; : do not consider atom isotopes while searching</span>
<span class="c1">//    &quot;ignore_valence&quot; : do not consider atom valence while searching</span>
<span class="c1">//    &quot;ignore_radicals&quot; : do not consider atom radicals while searching</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAutomap</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">mode</span><span class="p">);</span>

<span class="c1">// Returns mapping number. It might appear that there is more them</span>
<span class="c1">// one atom with the same number in AAM</span>
<span class="c1">// Value 0 means no mapping number has been specified.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetAtomMappingNumber</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="kt">int</span> <span class="n">reaction_atom</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetAtomMappingNumber</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="kt">int</span> <span class="n">reaction_atom</span><span class="p">,</span> <span class="kt">int</span> <span class="n">number</span><span class="p">);</span>

<span class="c1">// Getters and setters for reacting centers</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetReactingCenter</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="kt">int</span> <span class="n">reaction_bond</span><span class="p">,</span> <span class="kt">int</span><span class="o">*</span><span class="n">rc</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetReactingCenter</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="kt">int</span> <span class="n">reaction_bond</span><span class="p">,</span> <span class="kt">int</span> <span class="n">rc</span><span class="p">);</span>

<span class="c1">// Clears all reaction AAM information</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoClearAAM</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">);</span>

<span class="c1">// Corrects reacting centers according to AAM</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCorrectReactingCenters</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">);</span>


<span class="cm">/* Accessing a molecule */</span>

<span class="k">enum</span>
<span class="p">{</span>
   <span class="n">INDIGO_ABS</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
   <span class="n">INDIGO_OR</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span>
   <span class="n">INDIGO_AND</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span>
   <span class="n">INDIGO_EITHER</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span>
   <span class="n">INDIGO_UP</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span>
   <span class="n">INDIGO_DOWN</span> <span class="o">=</span> <span class="mi">6</span><span class="p">,</span>
   <span class="n">INDIGO_CIS</span> <span class="o">=</span> <span class="mi">7</span><span class="p">,</span>
   <span class="n">INDIGO_TRANS</span> <span class="o">=</span> <span class="mi">8</span><span class="p">,</span>
   <span class="n">INDIGO_CHAIN</span> <span class="o">=</span> <span class="mi">9</span><span class="p">,</span>
   <span class="n">INDIGO_RING</span> <span class="o">=</span> <span class="mi">10</span><span class="p">,</span>
   <span class="n">INDIGO_ALLENE</span> <span class="o">=</span> <span class="mi">11</span><span class="p">,</span>

   <span class="n">INDIGO_SINGLET</span> <span class="o">=</span> <span class="mi">101</span><span class="p">,</span>
   <span class="n">INDIGO_DOUBLET</span> <span class="o">=</span> <span class="mi">102</span><span class="p">,</span>
   <span class="n">INDIGO_TRIPLET</span> <span class="o">=</span> <span class="mi">103</span><span class="p">,</span>
<span class="p">};</span>

<span class="c1">// Returns an iterator for all atoms of the given</span>
<span class="c1">// molecule, including r-sites and pseudoatoms.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateAtoms</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIteratePseudoatoms</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateRSites</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateStereocenters</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateAlleneCenters</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateRGroups</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountRGroups</span><span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIsPseudoatom</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIsRSite</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>

<span class="c1">// returns INDIGO_{ABS,OR,AND,EITHER}</span>
<span class="c1">// or zero if the atom is not a stereoatom</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoStereocenterType</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoChangeStereocenterType</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="n">type</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoStereocenterGroup</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetStereocenterGroup</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="n">group</span><span class="p">);</span>

<span class="c1">// returns 4 integers with atom indices that defines stereocenter pyramid</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">int</span><span class="o">*</span> <span class="nf">indigoStereocenterPyramid</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSingleAllowedRGroup</span> <span class="p">(</span><span class="kt">int</span> <span class="n">rsite</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddStereocenter</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="n">type</span><span class="p">,</span> <span class="kt">int</span> <span class="n">v1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">v2</span><span class="p">,</span> <span class="kt">int</span> <span class="n">v3</span><span class="p">,</span> <span class="kt">int</span> <span class="n">v4</span><span class="p">);</span>

<span class="c1">// Applicable to an R-Group, but not to a molecule</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateRGroupFragments</span> <span class="p">(</span><span class="kt">int</span> <span class="n">rgroup</span><span class="p">);</span>
<span class="c1">// Applicable to an R-Group and to a molecule</span>
<span class="c1">// Returns maximal order of attachment points</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountAttachmentPoints</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateAttachmentPoints</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="kt">int</span> <span class="n">order</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoSymbol</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoDegree</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>

<span class="c1">// Returns zero if the charge is ambiguous</span>
<span class="c1">// If the charge is nonambiguous, returns 1 and writes *charge</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetCharge</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">charge</span><span class="p">);</span>
<span class="c1">// Same as indigoGetCharge</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetExplicitValence</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">valence</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetExplicitValence</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="n">valence</span><span class="p">);</span>

<span class="c1">// Returns a number of element from the periodic table.</span>
<span class="c1">// Returns zero on ambiguous atom.</span>
<span class="c1">// Can not be applied to pseudo-atoms and R-sites.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAtomicNumber</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>
<span class="c1">// Returns zero on unspecified or ambiguous isotope</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIsotope</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>
<span class="c1">// Not applicable to query molecules.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoValence</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>
<span class="c1">// Returns zero if valence of the atom is wrong</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCheckValence</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>

<span class="c1">// Returns one if atom or bond belongs Query or has any query feature</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCheckQuery</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="c1">// Returns one if structure contains RGroup features (RSites, RGroups or attachment points</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCheckRGroups</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="c1">// Applicable to atoms, query atoms, and molecules. Can fail</span>
<span class="c1">// (return zero) on query atoms where the number of hydrogens</span>
<span class="c1">// is not definitely known. Otherwise, returns one and writes *hydro.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountHydrogens</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">hydro</span><span class="p">);</span>

<span class="c1">// Applicable to non-query molecules and atoms.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountImplicitHydrogens</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="c1">// On success, returns always the same pointer to a 3-element array;</span>
<span class="c1">// you should not free() it, but rather memcpy() it if you want to keep it.</span>
<span class="n">CEXPORT</span> <span class="kt">float</span> <span class="o">*</span> <span class="nf">indigoXYZ</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetXYZ</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">float</span> <span class="n">x</span><span class="p">,</span> <span class="kt">float</span> <span class="n">y</span><span class="p">,</span> <span class="kt">float</span> <span class="n">z</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountSuperatoms</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountDataSGroups</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountRepeatingUnits</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountMultipleGroups</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountGenericSGroups</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateDataSGroups</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateSuperatoms</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateGenericSGroups</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateRepeatingUnits</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateMultipleGroups</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateSGroups</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetSuperatom</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">index</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetDataSGroup</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">index</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetGenericSGroup</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">index</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetMultipleGroup</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">index</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetRepeatingUnit</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">index</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoDescription</span> <span class="p">(</span><span class="kt">int</span> <span class="n">data_sgroup</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoData</span> <span class="p">(</span><span class="kt">int</span> <span class="n">data_sgroup</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddDataSGroup</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">natoms</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">atoms</span><span class="p">,</span>
        <span class="kt">int</span> <span class="n">nbonds</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">bonds</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">description</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">data</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddSuperatom</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">natoms</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">atoms</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetDataSGroupXY</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="kt">float</span> <span class="n">x</span><span class="p">,</span> <span class="kt">float</span> <span class="n">y</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">options</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupData</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">data</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupCoords</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="kt">float</span> <span class="n">x</span><span class="p">,</span> <span class="kt">float</span> <span class="n">y</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupDescription</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">description</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupFieldName</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupQueryCode</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">querycode</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupQueryOper</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">queryoper</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupDisplay</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">option</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupLocation</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">option</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupTag</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">tag</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupTagAlign</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="kt">int</span> <span class="n">tag_align</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupDataType</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">type</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupXCoord</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="kt">float</span> <span class="n">x</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupYCoord</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="kt">float</span> <span class="n">y</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCreateSGroup</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">type</span><span class="p">,</span> <span class="kt">int</span> <span class="n">mapping</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoGetSGroupClass</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoGetSGroupName</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupClass</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sgclass</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupName</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sgname</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetSGroupNumCrossBonds</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddSGroupAttachmentPoint</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="kt">int</span> <span class="n">aidx</span><span class="p">,</span> <span class="kt">int</span> <span class="n">lvidx</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">apid</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoDeleteSGroupAttachmentPoint</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="kt">int</span> <span class="n">index</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetSGroupDisplayOption</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupDisplayOption</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="kt">int</span> <span class="n">option</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetSGroupSeqId</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetSGroupMultiplier</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupMultiplier</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="kt">int</span> <span class="n">multiplier</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoGetRepeatingUnitSubscript</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetRepeatingUnitConnectivity</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupBrackets</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="kt">int</span> <span class="n">brk_style</span><span class="p">,</span> <span class="kt">float</span> <span class="n">x1</span><span class="p">,</span> <span class="kt">float</span> <span class="n">y1</span><span class="p">,</span> <span class="kt">float</span> <span class="n">x2</span><span class="p">,</span> <span class="kt">float</span> <span class="n">y2</span><span class="p">,</span>
                                     <span class="kt">float</span> <span class="n">x3</span><span class="p">,</span> <span class="kt">float</span> <span class="n">y3</span><span class="p">,</span> <span class="kt">float</span> <span class="n">x4</span><span class="p">,</span> <span class="kt">float</span> <span class="n">y4</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoFindSGroups</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">property</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetSGroupType</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetSGroupIndex</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetSGroupOriginalId</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupOriginalId</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="kt">int</span> <span class="n">original</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetSGroupParentId</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetSGroupParentId</span> <span class="p">(</span><span class="kt">int</span> <span class="n">sgroup</span><span class="p">,</span> <span class="kt">int</span> <span class="n">parent</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoTransformSCSRtoCTAB</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoTransformCTABtoSCSR</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">templates</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoResetCharge</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoResetExplicitValence</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoResetIsotope</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetAttachmentPoint</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="n">order</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoClearAttachmentPoints</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoRemoveConstraints</span>  <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">type</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddConstraint</span>      <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">type</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddConstraintNot</span>   <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">type</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddConstraintOr</span>    <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">type</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">value</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoResetStereo</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoInvertStereo</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountAtoms</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountBonds</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountPseudoatoms</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountRSites</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateBonds</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="c1">// Returns 1/2/3 if the bond is a single/double/triple bond</span>
<span class="c1">// Returns 4 if the bond is an aromatic bond</span>
<span class="c1">// Returns zero if the bond is ambiguous (query bond)</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoBondOrder</span>  <span class="p">(</span><span class="kt">int</span> <span class="n">bond</span><span class="p">);</span>

<span class="c1">// Returns INDIGO_{UP/DOWN/EITHER/CIS/TRANS},</span>
<span class="c1">// or zero if the bond is not a stereobond</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoBondStereo</span> <span class="p">(</span><span class="kt">int</span> <span class="n">bond</span><span class="p">);</span>

<span class="c1">// Returns INDIGO_{CHAIN/RING},</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoTopology</span> <span class="p">(</span><span class="kt">int</span> <span class="n">bond</span><span class="p">);</span>

<span class="c1">// Returns an iterator whose elements can be treated as atoms.</span>
<span class="c1">// At the same time, they support indigoBond() call.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateNeighbors</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>

<span class="c1">// Applicable exclusively to the &quot;atom neighbors iterator&quot;.</span>
<span class="c1">// Returns a bond to the neighbor atom.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoBond</span> <span class="p">(</span><span class="kt">int</span> <span class="n">nei</span><span class="p">);</span>

<span class="c1">// Accessing atoms and bonds by index</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetAtom</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">idx</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetBond</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">idx</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSource</span> <span class="p">(</span><span class="kt">int</span> <span class="n">bond</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoDestination</span> <span class="p">(</span><span class="kt">int</span> <span class="n">bond</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoClearCisTrans</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoClearStereocenters</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountStereocenters</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoClearAlleneCenters</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountAlleneCenters</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoResetSymmetricCisTrans</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoResetSymmetricStereocenters</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoMarkEitherCisTrans</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoMarkStereobonds</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoValidateChirality</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>

<span class="c1">// Accepts a symbol from the periodic table (like &quot;C&quot; or &quot;Br&quot;),</span>
<span class="c1">// or a pseudoatom symbol, like &quot;Pol&quot;. Returns the added atom.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddAtom</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">symbol</span><span class="p">);</span>
<span class="c1">// Set a new atom instead of specified</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoResetAtom</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">symbol</span><span class="p">);</span>

<span class="c1">// Accepts Rsite name &quot;R&quot; (or just &quot;&quot;), &quot;R1&quot;, &quot;R2&quot; or list with names &quot;R1 R3&quot;</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddRSite</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetRSite</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetCharge</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="n">charge</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetIsotope</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="n">isotope</span><span class="p">);</span>

<span class="c1">// If the radical is nonambiguous, returns 1 and writes *electrons</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetRadicalElectrons</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">electrons</span><span class="p">);</span>
<span class="c1">// If the radical is nonambiguous, returns 1 and writes *radical</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetRadical</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">radical</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetRadical</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="n">radical</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoResetRadical</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>

<span class="c1">// Used for hacks with aromatic molecules; not recommended to use</span>
<span class="c1">// in other situations</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetImplicitHCount</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">,</span> <span class="kt">int</span> <span class="n">impl_h</span><span class="p">);</span>

<span class="c1">// Accepts two atoms (source and destination) and the order of the new bond</span>
<span class="c1">// (1/2/3/4 = single/double/triple/aromatic). Returns the added bond.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddBond</span> <span class="p">(</span><span class="kt">int</span> <span class="n">source</span><span class="p">,</span> <span class="kt">int</span> <span class="n">destination</span><span class="p">,</span> <span class="kt">int</span> <span class="n">order</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetBondOrder</span> <span class="p">(</span><span class="kt">int</span> <span class="n">bond</span><span class="p">,</span> <span class="kt">int</span> <span class="n">order</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoMerge</span> <span class="p">(</span><span class="kt">int</span> <span class="n">where_to</span><span class="p">,</span> <span class="kt">int</span> <span class="n">what</span><span class="p">);</span>

<span class="cm">/* Highlighting */</span>

<span class="c1">// Access atoms and bonds</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoHighlight</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="c1">// Access atoms, bonds, molecules, and reactions</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoUnhighlight</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="c1">// Access atoms and bonds</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIsHighlighted</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="cm">/* Connected components of molecules */</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountComponents</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoComponentIndex</span> <span class="p">(</span><span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateComponents</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="c1">// Returns a &#39;molecule component&#39; object, which can not be used as a</span>
<span class="c1">// [query] molecule, but supports the indigo{Count,Iterate}{Atoms,Bonds} calls,</span>
<span class="c1">// and also the indigoClone() call, which returns a [query] molecule.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoComponent</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">index</span><span class="p">);</span>

<span class="cm">/* Smallest Set of Smallest Rings */</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountSSSR</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateSSSR</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateSubtrees</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">min_atoms</span><span class="p">,</span> <span class="kt">int</span> <span class="n">max_atoms</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateRings</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">min_atoms</span><span class="p">,</span> <span class="kt">int</span> <span class="n">max_atoms</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateEdgeSubmolecules</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">min_bonds</span><span class="p">,</span> <span class="kt">int</span> <span class="n">max_bonds</span><span class="p">);</span>

<span class="cm">/* Calculation on molecules */</span>

<span class="n">CEXPORT</span> <span class="kt">int</span>   <span class="nf">indigoCountHeavyAtoms</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span>   <span class="nf">indigoGrossFormula</span>    <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">double</span> <span class="nf">indigoMolecularWeight</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">double</span> <span class="nf">indigoMostAbundantMass</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">double</span> <span class="nf">indigoMonoisotopicMass</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoMassComposition</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoCanonicalSmiles</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoLayeredCode</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">int</span> <span class="o">*</span> <span class="nf">indigoSymmetryClasses</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">count_out</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoHasCoord</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoHasZCoord</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIsChiral</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIsPossibleFischerProjection</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">options</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCreateSubmolecule</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">nvertices</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">vertices</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCreateEdgeSubmolecule</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">nvertices</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">vertices</span><span class="p">,</span> <span class="kt">int</span> <span class="n">nedges</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">edges</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetSubmolecule</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">nvertices</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">vertices</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoRemoveAtoms</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">nvertices</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">vertices</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoRemoveBonds</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">nbonds</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">bonds</span><span class="p">);</span>

<span class="c1">// Determines and applies the best transformation to the given molecule</span>
<span class="c1">// so that the specified atoms move as close as possible to the desired</span>
<span class="c1">// positions. The size of desired_xyz is equal to 3 * natoms.</span>
<span class="c1">// The return value is the root-mean-square measure of the difference</span>
<span class="c1">// between the desired and obtained positions.</span>
<span class="n">CEXPORT</span> <span class="kt">float</span> <span class="nf">indigoAlignAtoms</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="kt">int</span> <span class="n">natoms</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">atom_ids</span><span class="p">,</span> <span class="kt">float</span> <span class="o">*</span><span class="n">desired_xyz</span><span class="p">);</span>

<span class="cm">/* Things that work for both molecules and reactions */</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAromatize</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoDearomatize</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoFoldHydrogens</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoUnfoldHydrogens</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoLayout</span><span class="p">(</span><span class="kt">int</span> <span class="n">object</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoClean2d</span><span class="p">(</span><span class="kt">int</span> <span class="n">object</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoSmiles</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoSmarts</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoCanonicalSmarts</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="c1">// Returns a &quot;mapping&quot; if there is an exact match, zero otherwise</span>
<span class="c1">// The flags string consists of space-separated flags.</span>
<span class="c1">// The more flags, the more restrictive matching is done.</span>
<span class="c1">// &quot;ELE&quot;: Distribution of electrons: bond types, atom charges, radicals, valences</span>
<span class="c1">// &quot;MAS&quot;: Atom isotopes</span>
<span class="c1">// &quot;STE&quot;: Stereochemistry: chiral centers, stereogroups, and cis-trans bonds</span>
<span class="c1">// &quot;FRA&quot;: Connected fragments: disallows match of separate ions in salts</span>
<span class="c1">// &quot;ALL&quot;: All of the above</span>
<span class="c1">// By default (with null or empty flags string) all flags are on.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoExactMatch</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">item2</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">flags</span><span class="p">);</span>

<span class="c1">// &quot;beg&quot; and &quot;end&quot; refer to the two ends of the tautomeric chain. Allowed</span>
<span class="c1">// elements are separated by commas. &#39;1&#39; at the beginning means an aromatic</span>
<span class="c1">// atom, while &#39;0&#39; means an aliphatic atom.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetTautomerRule</span> <span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">beg</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">end</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoRemoveTautomerRule</span> <span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoClearTautomerRules</span> <span class="p">();</span>

<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoName</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetName</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">);</span>

<span class="c1">// You should not free() the obtained buffer, but rather memcpy() it if you want to keep it</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSerialize</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">,</span> <span class="n">byte</span> <span class="o">**</span><span class="n">buf</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">size</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoUnserialize</span> <span class="p">(</span><span class="k">const</span> <span class="n">byte</span> <span class="o">*</span><span class="n">buf</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">);</span>

<span class="c1">// Applicable to molecules/reactions obtained from SDF or RDF files,</span>
<span class="c1">// and to their clones, and to their R-Group deconvolutions.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoHasProperty</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">prop</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoGetProperty</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">prop</span><span class="p">);</span>

<span class="c1">// Applicable to newly created or cloned molecules/reactions,</span>
<span class="c1">// and also to molecules/reactions obtained from SDF or RDF files.</span>
<span class="c1">// If the property with the given name does not exist, it is created automatically.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSetProperty</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">prop</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">value</span><span class="p">);</span>

<span class="c1">// Does not raise an error if the given property does not exist</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoRemoveProperty</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">prop</span><span class="p">);</span>

<span class="c1">// Returns an iterator that one can pass to indigoName() to</span>
<span class="c1">// know the name of the property. The value of the property can be</span>
<span class="c1">// obtained via indigoGetProperty() call to the object</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateProperties</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>

<span class="c1">// Clears all properties of the molecule</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoClearProperties</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>

<span class="c1">// Accepts a molecule or reaction (but not query molecule or query reaction).</span>
<span class="c1">// Returns a string describing the first encountered mistake with valence.</span>
<span class="c1">// Returns an empty string if the input molecule/reaction is fine.</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoCheckBadValence</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>

<span class="c1">// Accepts a molecule or reaction (but not query molecule or query reaction).</span>
<span class="c1">// Returns a string describing the first encountered mistake with ambiguous H counter.</span>
<span class="c1">// Returns an empty string if the input molecule/reaction is fine.</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoCheckAmbiguousH</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>

<span class="cm">/* Fingerprints */</span>

<span class="c1">// Returns a &#39;fingerprint&#39; object, which can then be passed to:</span>
<span class="c1">//   indigoToString() -- to get hexadecimal representation</span>
<span class="c1">//   indigoToBuffer() -- to get raw byte data</span>
<span class="c1">//   indigoSimilarity() -- to calculate similarity with another fingerprint</span>
<span class="c1">// The following fingerprint types are available:</span>
<span class="c1">//   &quot;sim&quot;     -- &quot;Similarity fingerprint&quot;, useful for calculating</span>
<span class="c1">//                 similarity measures (the default)</span>
<span class="c1">//   &quot;sub&quot;     -- &quot;Substructure fingerprint&quot;, useful for substructure screening</span>
<span class="c1">//   &quot;sub-res&quot; -- &quot;Resonance substructure fingerprint&quot;, useful for resonance</span>
<span class="c1">//                 substructure screening</span>
<span class="c1">//   &quot;sub-tau&quot; -- &quot;Tautomer substructure fingerprint&quot;, useful for tautomer</span>
<span class="c1">//                 substructure screening</span>
<span class="c1">//   &quot;full&quot;    -- &quot;Full fingerprint&quot;, which has all the mentioned</span>
<span class="c1">//                 fingerprint types included</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoFingerprint</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">type</span><span class="p">);</span>

<span class="c1">// Counts the nonzero (i.e. one) bits in a fingerprint</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountBits</span> <span class="p">(</span><span class="kt">int</span> <span class="n">fingerprint</span><span class="p">);</span>

<span class="c1">// Counts the number of the coinincident in two fingerprints</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCommonBits</span> <span class="p">(</span><span class="kt">int</span> <span class="n">fingerprint1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">fingerprint2</span><span class="p">);</span>

<span class="c1">//Return one bits string for the fingerprint object</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="nf">indigoOneBitsList</span> <span class="p">(</span><span class="kt">int</span> <span class="n">fingerprint</span><span class="p">);</span>

<span class="c1">// Accepts two molecules, two reactions, or two fingerprints.</span>
<span class="c1">// Returns the similarity measure between them.</span>
<span class="c1">// Metrics: &quot;tanimoto&quot;, &quot;tversky&quot;, &quot;tversky &lt;alpha&gt; &lt;beta&gt;&quot;, &quot;euclid-sub&quot; or &quot;normalized-edit&quot;</span>
<span class="c1">// Zero pointer or empty string defaults to &quot;tanimoto&quot;.</span>
<span class="c1">// &quot;tversky&quot; without numbers defaults to alpha = beta = 0.5</span>
<span class="n">CEXPORT</span> <span class="kt">float</span> <span class="nf">indigoSimilarity</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">item2</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">metrics</span><span class="p">);</span>

<span class="cm">/* Working with SDF/RDF/SMILES/CML/CDX files  */</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateSDF</span>    <span class="p">(</span><span class="kt">int</span> <span class="n">reader</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateRDF</span>    <span class="p">(</span><span class="kt">int</span> <span class="n">reader</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateSmiles</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reader</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateCML</span>    <span class="p">(</span><span class="kt">int</span> <span class="n">reader</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateCDX</span>    <span class="p">(</span><span class="kt">int</span> <span class="n">reader</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateSDFile</span>     <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateRDFile</span>     <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateSmilesFile</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateCMLFile</span>    <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateCDXFile</span>    <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">);</span>

<span class="c1">// Applicable to items returned by SDF/RDF iterators.</span>
<span class="c1">// Returns the content of SDF/RDF item.</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoRawData</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="c1">// Applicable to items returned by SDF/RDF iterators.</span>
<span class="c1">// Returns the offset in the SDF/RDF file.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoTell</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">long</span> <span class="kt">long</span> <span class="nf">indigoTell64</span><span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>

<span class="c1">// Saves the molecule to an SDF output stream</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSdfAppend</span> <span class="p">(</span><span class="kt">int</span> <span class="n">output</span><span class="p">,</span> <span class="kt">int</span> <span class="n">item</span><span class="p">);</span>
<span class="c1">// Saves the molecule to a multiline SMILES output stream</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSmilesAppend</span> <span class="p">(</span><span class="kt">int</span> <span class="n">output</span><span class="p">,</span> <span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="c1">// Similarly for RDF files, except that the header should be written first</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoRdfHeader</span> <span class="p">(</span><span class="kt">int</span> <span class="n">output</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoRdfAppend</span> <span class="p">(</span><span class="kt">int</span> <span class="n">output</span><span class="p">,</span> <span class="kt">int</span> <span class="n">item</span><span class="p">);</span>

<span class="c1">// Similarly for CML files, except that they have both header and footer</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCmlHeader</span> <span class="p">(</span><span class="kt">int</span> <span class="n">output</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCmlAppend</span> <span class="p">(</span><span class="kt">int</span> <span class="n">output</span><span class="p">,</span> <span class="kt">int</span> <span class="n">item</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCmlFooter</span> <span class="p">(</span><span class="kt">int</span> <span class="n">output</span><span class="p">);</span>

<span class="c1">// Create saver objects that can be used to save molecules or reactions</span>
<span class="c1">// Supported formats: &#39;sdf&#39;, &#39;smi&#39; or &#39;smiles&#39;, &#39;cml&#39;, &#39;rdf&#39;</span>
<span class="c1">// Format argument is case-insensitive</span>
<span class="c1">// Saver should be closed with indigoClose function</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCreateSaver</span> <span class="p">(</span><span class="kt">int</span> <span class="n">output</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">format</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCreateFileSaver</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">format</span><span class="p">);</span>

<span class="c1">// Append object to a specified saver stream</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAppend</span> <span class="p">(</span><span class="kt">int</span> <span class="n">saver</span><span class="p">,</span> <span class="kt">int</span> <span class="n">object</span><span class="p">);</span>

<span class="cm">/* Arrays */</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCreateArray</span> <span class="p">();</span>
<span class="c1">// Note: a clone of the object is added, not the object itself</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoArrayAdd</span> <span class="p">(</span><span class="kt">int</span> <span class="n">arr</span><span class="p">,</span> <span class="kt">int</span> <span class="n">object</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAt</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">,</span> <span class="kt">int</span> <span class="n">index</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCount</span> <span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoClear</span> <span class="p">(</span><span class="kt">int</span> <span class="n">arr</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateArray</span> <span class="p">(</span><span class="kt">int</span> <span class="n">arr</span><span class="p">);</span>

<span class="cm">/* Substructure matching */</span>

<span class="c1">// Returns a new &#39;matcher&#39; object</span>
<span class="c1">// &#39;mode&#39; is reserved for future use; currently its value is ignored</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoSubstructureMatcher</span> <span class="p">(</span><span class="kt">int</span> <span class="n">target</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">mode</span><span class="p">);</span>

<span class="c1">// Ignore target atom in the substructure matcher</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIgnoreAtom</span> <span class="p">(</span><span class="kt">int</span> <span class="n">matcher</span><span class="p">,</span> <span class="kt">int</span> <span class="n">atom_object</span><span class="p">);</span>

<span class="c1">// Ignore target atom in the substructure matcher</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoUnignoreAtom</span> <span class="p">(</span><span class="kt">int</span> <span class="n">matcher</span><span class="p">,</span> <span class="kt">int</span> <span class="n">atom_object</span><span class="p">);</span>

<span class="c1">// Clear list of ignored target atoms in the substructure matcher</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoUnignoreAllAtoms</span> <span class="p">(</span><span class="kt">int</span> <span class="n">matcher</span><span class="p">);</span>

<span class="c1">// Returns a new &#39;match&#39; object on success, zero on fail</span>
<span class="c1">//    matcher is an matcher object returned by indigoSubstructureMatcher</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoMatch</span> <span class="p">(</span><span class="kt">int</span> <span class="n">matcher</span><span class="p">,</span> <span class="kt">int</span> <span class="n">query</span><span class="p">);</span>

<span class="c1">// Counts the number of embeddings of the query structure into the target</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountMatches</span> <span class="p">(</span><span class="kt">int</span> <span class="n">matcher</span><span class="p">,</span> <span class="kt">int</span> <span class="n">query</span><span class="p">);</span>

<span class="c1">// Counts the number of embeddings of the query structure into the target</span>
<span class="c1">// If number of embeddings is more then limit then limit is returned</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCountMatchesWithLimit</span> <span class="p">(</span><span class="kt">int</span> <span class="n">matcher</span><span class="p">,</span> <span class="kt">int</span> <span class="n">query</span><span class="p">,</span> <span class="kt">int</span> <span class="n">embeddings_limit</span><span class="p">);</span>

<span class="c1">// Returns substructure matches iterator</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateMatches</span> <span class="p">(</span><span class="kt">int</span> <span class="n">matcher</span><span class="p">,</span> <span class="kt">int</span> <span class="n">query</span><span class="p">);</span>

<span class="c1">// Accepts a &#39;match&#39; object obtained from indigoMatchSubstructure.</span>
<span class="c1">// Returns a new molecule which has the query highlighted.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoHighlightedTarget</span> <span class="p">(</span><span class="kt">int</span> <span class="n">match</span><span class="p">);</span>

<span class="c1">// Accepts an atom from the query, not an atom index.</span>
<span class="c1">//   You can use indigoGetAtom() to obtain the atom by its index.</span>
<span class="c1">// Returns the corresponding target atom, not an atom index. If query</span>
<span class="c1">// atom doesn&#39;t match particular atom in the target (R-group or explicit</span>
<span class="c1">// hydrogen) then return value is zero.</span>
<span class="c1">//   You can use indigoIndex() to obtain the index of the returned atom.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoMapAtom</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">,</span> <span class="kt">int</span> <span class="n">atom</span><span class="p">);</span>

<span class="c1">// Accepts a bond from the query, not a bond index.</span>
<span class="c1">//   You can use indigoGetBond() to obtain the bond by its index.</span>
<span class="c1">// Returns the corresponding target bond, not a bond index. If query</span>
<span class="c1">// bond doesn&#39;t match particular bond in the target (R-group or explicit</span>
<span class="c1">// hydrogen) then return value is zero.</span>
<span class="c1">//   You can use indigoIndex() to obtain the index of the returned bond.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoMapBond</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">,</span> <span class="kt">int</span> <span class="n">bond</span><span class="p">);</span>

<span class="c1">// Accepts a molecule from the query reaction, not a molecule index.</span>
<span class="c1">//   You can use indigoGetMolecule() to obtain the bond by its index.</span>
<span class="c1">// Returns the corresponding target molecule, not a reaction index. If query</span>
<span class="c1">// molecule doesn&#39;t match particular molecule in the target then return</span>
<span class="c1">// value is zero.</span>
<span class="c1">//   You can use indigoIndex() to obtain the index of the returned molecule.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoMapMolecule</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">,</span> <span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="c1">// Accepts a molecule and options for tautomer enumeration algorithms</span>
<span class="c1">// Returns an iterator object over the molecules that are tautomers of this molecule.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateTautomers</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">options</span><span class="p">);</span>

<span class="cm">/* Scaffold detection */</span>

<span class="c1">// Returns zero if no common substructure is found.</span>
<span class="c1">// Otherwise, it returns a new object, which can be</span>
<span class="c1">//   (i) treated as a structure: the maximum (by the number of rings) common</span>
<span class="c1">//       substructure of the given structures.</span>
<span class="c1">//  (ii) passed to indigoAllScaffolds()</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoExtractCommonScaffold</span> <span class="p">(</span><span class="kt">int</span> <span class="n">structures</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">options</span><span class="p">);</span>

<span class="c1">// Returns an array of all possible scaffolds.</span>
<span class="c1">// The input parameter is the value returned by indigoExtractCommonScaffold().</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAllScaffolds</span> <span class="p">(</span><span class="kt">int</span> <span class="n">extracted</span><span class="p">);</span>

<span class="cm">/* R-Group deconvolution */</span>

<span class="c1">// Returns a ``decomposition&#39;&#39; object that can be passed to</span>
<span class="c1">// indigoDecomposedMoleculeScaffold() and</span>
<span class="c1">// indigoIterateDecomposedMolecules()</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoDecomposeMolecules</span> <span class="p">(</span><span class="kt">int</span> <span class="n">scaffold</span><span class="p">,</span> <span class="kt">int</span> <span class="n">structures</span><span class="p">);</span>

<span class="c1">// Returns a scaffold molecule with r-sites marking the place</span>
<span class="c1">// for substituents to add to form the structures given above.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoDecomposedMoleculeScaffold</span> <span class="p">(</span><span class="kt">int</span> <span class="n">decomp</span><span class="p">);</span>

<span class="c1">// Returns an iterator which corresponds to the given collection of structures.</span>
<span class="c1">// indigoDecomposedMoleculeHighlighted() and</span>
<span class="c1">// indigoDecomposedMoleculeWithRGroups() are applicable to the</span>
<span class="c1">// values returned by the iterator.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateDecomposedMolecules</span> <span class="p">(</span><span class="kt">int</span> <span class="n">decomp</span><span class="p">);</span>

<span class="c1">// Returns a molecule with highlighted scaffold</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoDecomposedMoleculeHighlighted</span> <span class="p">(</span><span class="kt">int</span> <span class="n">decomp</span><span class="p">);</span>

<span class="c1">// Returns a query molecule with r-sites and &quot;R1=...&quot;, &quot;R2=...&quot;</span>
<span class="c1">// substituents defined. The &#39;scaffold&#39; part of the molecule</span>
<span class="c1">// is identical to the indigoDecomposedMoleculeScaffold()</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoDecomposedMoleculeWithRGroups</span> <span class="p">(</span><span class="kt">int</span> <span class="n">decomp</span><span class="p">);</span>

<span class="cm">/*</span>
<span class="cm"> * Decomposition Iteration API</span>
<span class="cm"> */</span>
<span class="c1">// Returns a &#39;decomposition&#39; object</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoCreateDecomposer</span><span class="p">(</span><span class="kt">int</span> <span class="n">scaffold</span><span class="p">);</span>
<span class="c1">// Returns a &#39;decomposition&#39; item</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoDecomposeMolecule</span><span class="p">(</span><span class="kt">int</span> <span class="n">decomp</span><span class="p">,</span> <span class="kt">int</span> <span class="n">mol</span><span class="p">);</span>
<span class="c1">// Returns decomposition iterator</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoIterateDecompositions</span><span class="p">(</span><span class="kt">int</span> <span class="n">deco_item</span><span class="p">);</span>
<span class="c1">// Adds the input decomposition to a full scaffold</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoAddDecomposition</span><span class="p">(</span><span class="kt">int</span> <span class="n">decomp</span><span class="p">,</span> <span class="kt">int</span> <span class="n">q_match</span><span class="p">);</span>

<span class="cm">/* R-Group convolution */</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoGetFragmentedMolecule</span><span class="p">(</span><span class="kt">int</span> <span class="n">elem</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">options</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoRGroupComposition</span><span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">options</span><span class="p">);</span>

<span class="cm">/*</span>
<span class="cm"> * Abbreviations</span>
<span class="cm"> */</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoExpandAbbreviations</span> <span class="p">(</span><span class="kt">int</span> <span class="n">molecule</span><span class="p">);</span>

<span class="cm">/* Other */</span>

<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoToString</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">);</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoToBuffer</span> <span class="p">(</span><span class="kt">int</span> <span class="n">handle</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">buf</span><span class="p">,</span> <span class="kt">int</span> <span class="o">*</span><span class="n">size</span><span class="p">);</span>

<span class="cm">/* Reaction products enumeration */</span>

<span class="c1">// Accepts a query reaction with markd R-sites, and array of arrays</span>
<span class="c1">// of substituents corresponding to the R-Sites. Returns an array of</span>
<span class="c1">// reactions with R-Sites replaced by the actual substituents.</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoReactionProductEnumerate</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="kt">int</span> <span class="n">monomers</span><span class="p">);</span>

<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoTransform</span> <span class="p">(</span><span class="kt">int</span> <span class="n">reaction</span><span class="p">,</span> <span class="kt">int</span> <span class="n">monomers</span><span class="p">);</span>


<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoTransformHELMtoSCSR</span> <span class="p">(</span><span class="kt">int</span> <span class="n">monomer</span><span class="p">);</span>

<span class="cm">/* Debug functionality */</span>

<span class="c1">// Returns internal type of an object</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoDbgInternalType</span> <span class="p">(</span><span class="kt">int</span> <span class="n">object</span><span class="p">);</span>

<span class="c1">// Internal breakpoint</span>
<span class="n">CEXPORT</span> <span class="kt">void</span> <span class="nf">indigoDbgBreakpoint</span> <span class="p">(</span><span class="kt">void</span><span class="p">);</span>

<span class="c1">// Methods that returns profiling infromation in a human readable format</span>
<span class="n">CEXPORT</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="nf">indigoDbgProfiling</span> <span class="p">(</span><span class="kt">int</span> <span class="cm">/*bool*/</span> <span class="n">whole_session</span><span class="p">);</span>

<span class="c1">// Reset profiling counters either for the current state or for the whole session</span>
<span class="n">CEXPORT</span> <span class="kt">int</span> <span class="nf">indigoDbgResetProfiling</span> <span class="p">(</span><span class="kt">int</span> <span class="cm">/*bool*/</span> <span class="n">whole_session</span><span class="p">);</span>

<span class="c1">// Methods that returns profiling counter value for a particular counter</span>
<span class="n">CEXPORT</span> <span class="n">qword</span> <span class="nf">indigoDbgProfilingGetCounter</span> <span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="kt">int</span> <span class="cm">/*bool*/</span> <span class="n">whole_session</span><span class="p">);</span>

<span class="cp">#endif</span>
</pre></div>
</div>
</div>
</div>
</div>


                            </div>
                        </div>
                    </div>
                </section>
                
            </main>
        </div>

        <footer>
    <div class="uui-promo-footer">
        <div class="footer-logo-copyright">
            <div class="epam-logo">
                <img src="../../_static/images/Logo_Epam_Color.svg" alt="" />
            </div>
            <p class="copyright">© 2017, EPAM Systems. All Rights Reserved.</p>
        </div>
        <div class="footer-navigation">
            <ul class="uui-footer-navigation">
                <li><a href="../../index.html">Products</a></li>
                <li><a href="../../resources.html">Resources</a></li>
                <li><a href="../../download/index.html">Downloads</a></li>
                <li><a href="../../contact.html">Contact Info</a></li>
            </ul>
        </div>
    </div>
</footer>
    </div>
    
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-20662471-2']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
    
</body>
</html>